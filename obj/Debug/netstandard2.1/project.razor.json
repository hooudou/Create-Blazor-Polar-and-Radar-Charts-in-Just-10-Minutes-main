{
  "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Blazor Charts.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "3.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": -65746344,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.Counter",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.Counter"
        }
      },
      {
        "HashCode": 446638990,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.Counter",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Pages.Counter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.Counter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1663984174,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.FetchData",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.FetchData"
        }
      },
      {
        "HashCode": -1801436237,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.FetchData",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Pages.FetchData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.FetchData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1674067240,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.Index",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.Index"
        }
      },
      {
        "HashCode": 263182318,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Pages.Index",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Pages.Index"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Pages.Index",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1670702260,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.NavMenu",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.NavMenu"
        }
      },
      {
        "HashCode": -2144449168,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.NavMenu",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Shared.NavMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.NavMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 879897150,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.MainLayout",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.MainLayout"
        }
      },
      {
        "HashCode": 1736569459,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.MainLayout",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Shared.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1917206942,
        "Kind": "Components.ChildContent",
        "Name": "Blazor_Charts.Shared.MainLayout.Body",
        "AssemblyName": "Blazor Charts",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazor_Charts.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1746736134,
        "Kind": "Components.ChildContent",
        "Name": "Blazor_Charts.Shared.MainLayout.Body",
        "AssemblyName": "Blazor Charts",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Blazor_Charts.Shared.MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazor_Charts.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2014841705,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.SurveyPrompt",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.SurveyPrompt"
        }
      },
      {
        "HashCode": 2071164741,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.Shared.SurveyPrompt",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.Shared.SurveyPrompt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.Shared.SurveyPrompt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 472927978,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.App",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.App"
        }
      },
      {
        "HashCode": 756042663,
        "Kind": "Components.Component",
        "Name": "Blazor_Charts.App",
        "AssemblyName": "Blazor Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazor_Charts.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazor_Charts.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -876609937,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -325519407,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 909141050,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -700243708,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 536679193,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView"
        }
      },
      {
        "HashCode": -2015153527,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1879651112,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1403492109,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1517514567,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView"
        }
      },
      {
        "HashCode": 617228379,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1979311919,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "HashCode": -189762936,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -806325141,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1984749400,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 477010062,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1834393210,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1570376398,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "HashCode": -1317134907,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 489388353,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "HashCode": 2060682075,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1425395868,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 784153619,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 341514961,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 1112941139,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1031239817,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1994079686,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1146491092,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -86565195,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -762945504,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1710745849,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1130157769,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -662414230,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1144413091,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 1368342721,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1111073816,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": -603998122,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1397561445,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -183000960,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 582290182,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "HashCode": 166280902,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -113796794,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "HashCode": -1066662000,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -386477367,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 720148254,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 829318548,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfButton",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The Button is a graphical user interface element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and\n            size can be defined by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the Button is enabled or disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering Button component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space for the Button that is used to include an icon.\n            Buttons can also include font icon and sprite image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.IconPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsPrimary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsPrimary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfButton"
        }
      },
      {
        "HashCode": 1144007310,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfButton",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The Button is a graphical user interface element that triggers an event on its click action.\n            It can contain a text, an image, or both.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the text content of the button element and it will support only string type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the button element. The Button types, styles, and\n            size can be defined by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the Button is enabled or disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering Button component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space for the Button that is used to include an icon.\n            Buttons can also include font icon and sprite image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.IconPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions the icon based on the text content in the button and its default value is Left.\n            The possible values are:\n            - Left: The icon will be positioned to the left of the text content.\n            - Right: The icon will be positioned to the right of the text content.\n            - Top: The icon will be positioned to the top of the text content.\n            - Bottom: The icon will be positioned to the bottom of the text content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsPrimary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Allows the appearance of the button to be enhanced and visually appealing when set to true.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsPrimary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsToggle",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Makes the Button toggle, when set to true. When you click it, the state changes from normal to active or viceversa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsToggle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as id, title etc., to the button element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when button element is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -819257196,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfButton.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1853057798,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfButton.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Sets content for button element including HTML and its customizations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -577553174,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n            It contains checked, unchecked, and indeterminate states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfCheckBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfCheckBox<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions label before/after the CheckBox.\n            The possible values are:\n            - Before - The label is positioned to left of the CheckBox.\n            - After - The label is positioned to right of the CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.\n            When set to true, the CheckBox will be in indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IndeterminateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "IndeterminateChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTriState",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value to enable/disable tri state functionality in CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTriState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Triggers when the CheckBox state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -983372382,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The CheckBox is a graphical user interface element that allows you to select one or more options from the choices.\n            It contains checked, unchecked, and indeterminate states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfCheckBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfCheckBox<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the caption for the CheckBox, that describes the purpose of the CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions label before/after the CheckBox.\n            The possible values are:\n            - Before - The label is positioned to left of the CheckBox.\n            - After - The label is positioned to right of the CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Indeterminate",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the CheckBox is in indeterminate state or not.\n            When set to true, the CheckBox will be in indeterminate state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Indeterminate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IndeterminateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "IndeterminateChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTriState",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value to enable/disable tri state functionality in CheckBox.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTriState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Triggers when the CheckBox state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2098939319,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfCheckBox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1709579532,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfCheckBox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -651971278,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipEvents",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Configure handlers to handle the events with the Chip component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChipEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnBeforeClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This click event will get triggered once the chip is before click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnBeforeClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This click event will get triggered once the chip is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            This created event will get triggered once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Destroyed",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            This created event will get triggered once the component successfuly disposed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Destroyed",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDelete",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This delete event will get triggered before removing the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDelete",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Deleted",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipDeletedEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that is raised when the chip item is deleted.\n            </summary>\n            <remarks>\n            You can get the deleted chip details.\n            </remarks>\n            <example>\n            In the below code example, the deleted chip value can be obtained from the <c>Deleted</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" EnableDelete=true>\n                <ChipEvents Deleted=\"@onDeleted\"></ChipEvents>\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void onDeleted(ChipDeletedEventArgs args) {\n                    string deletedValue = args.Value;\n                }\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Deleted",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipEvents"
        }
      },
      {
        "HashCode": 450205372,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipEvents",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Configure handlers to handle the events with the Chip component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.ChipEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnBeforeClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This click event will get triggered once the chip is before click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnBeforeClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This click event will get triggered once the chip is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            This created event will get triggered once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Destroyed",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            This created event will get triggered once the component successfuly disposed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Destroyed",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDelete",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipEventArgs>",
            "Documentation": "\n            <summary>\n            This delete event will get triggered before removing the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDelete",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Deleted",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChipDeletedEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that is raised when the chip item is deleted.\n            </summary>\n            <remarks>\n            You can get the deleted chip details.\n            </remarks>\n            <example>\n            In the below code example, the deleted chip value can be obtained from the <c>Deleted</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" EnableDelete=true>\n                <ChipEvents Deleted=\"@onDeleted\"></ChipEvents>\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void onDeleted(ChipDeletedEventArgs args) {\n                    string deletedValue = args.Value;\n                }\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Deleted",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipEvents",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1225806712,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipItems",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Configures the collection of chipitem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChipItems"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItems"
        }
      },
      {
        "HashCode": 1741352160,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipItems",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Configures the collection of chipitem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.ChipItems"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItems",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -911155546,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.ChipItems.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChipItems"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItems.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -190112130,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.ChipItems.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Indicates the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.ChipItems"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItems.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -173997911,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipItem",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChipItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the Chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the chip component is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingIconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon CSS class for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingIconUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIconUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the customized text value for the avatar in the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text content for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the trailing icon CSS class for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIconUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            This value property helps to store the chip component values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            You can add the additional html attributes such as title to the each chip element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItem"
        }
      },
      {
        "HashCode": -1589395339,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.ChipItem",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            A Chip is a small block of essential information that contains the text, image, or both and mostly used in contacts, mails, or filter tags.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n            <summary>\n            Partial Class ChipItem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.ChipItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the Chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the chip component is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingIconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon CSS class for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingIconUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingIconUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LeadingText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the customized text value for the avatar in the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LeadingText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text content for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the trailing icon CSS class for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TrailingIconUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the leading icon url for the chip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TrailingIconUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            This value property helps to store the chip component values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            You can add the additional html attributes such as title to the each chip element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -692779745,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.ChipItem.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChipItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1206945560,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.ChipItem.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.ChipItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.ChipItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1205358712,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfChip",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            Specifies the Partial class SfChip.\n            </summary>\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the chip component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Buttons.ChipItem>",
            "Documentation": "\n            <summary>\n            This chips property helps to render chipitem component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableDelete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This enableDelete property helps to enable delete functionality.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableDelete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This enabled property helps to enable/disable chipitem component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            This selectedChips property helps to select chip items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String[]>",
            "Documentation": "\n            <summary>\n            Specifies the callback to trigger when the selected chips changes.\n            </summary>\n            <remarks>\n            You can get the updated SelectedChips value.\n            </remarks>\n            <example>\n            In the below code example, the SelectedChips value can be obtained from the <c>SelectedChipsChanged</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" SelectedChipsChanged=\"SelectedChipsChanged\">\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void SelectedChipsChanged(string[] args) {\n                    string[] selectedChipItem = args;\n                }\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selection",
            "TypeName": "Syncfusion.Blazor.Buttons.SelectionType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            This selection property enables chip selection type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            You can add the additional html attributes such as title, native events etc., to the wrapper element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip"
        }
      },
      {
        "HashCode": -1035452093,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfChip",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            Specifies the Partial class SfChip.\n            </summary>\n            <summary>\n            Partial Class SfChip.\n            </summary>\n            <summary>\n            The SfChip component displays a list of chip each of which contains a block of essential information that triggers an event on click action.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfChip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the custom classes to be added to the chip element used to customize the chip component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Buttons.ChipItem>",
            "Documentation": "\n            <summary>\n            This chips property helps to render chipitem component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableDelete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This enableDelete property helps to enable delete functionality.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableDelete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This enabled property helps to enable/disable chipitem component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChips",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            This selectedChips property helps to select chip items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedChips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedChipsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String[]>",
            "Documentation": "\n            <summary>\n            Specifies the callback to trigger when the selected chips changes.\n            </summary>\n            <remarks>\n            You can get the updated SelectedChips value.\n            </remarks>\n            <example>\n            In the below code example, the SelectedChips value can be obtained from the <c>SelectedChipsChanged</c> event.\n            <code><![CDATA[\n            <SfChip Selection=\"SelectionType.Multiple\" SelectedChipsChanged=\"SelectedChipsChanged\">\n                <ChipItems>\n                    <ChipItem Text = \"Small\"></ChipItem>\n                    <ChipItem Text = \"Medium\"></ChipItem>\n                    <ChipItem Text = \"Large\"></ChipItem>\n                    <ChipItem Text = \"Extra Large\"></ChipItem>\n                </ChipItems>\n            </SfChip>\n            @code {\n                private void SelectedChipsChanged(string[] args) {\n                    string[] selectedChipItem = args;\n                }\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedChipsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selection",
            "TypeName": "Syncfusion.Blazor.Buttons.SelectionType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            This selection property enables chip selection type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            You can add the additional html attributes such as title, native events etc., to the wrapper element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1932990944,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfChip.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfChip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -887525433,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfChip.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            Specifies the ChildContent.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfChip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 289408319,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfIcon",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            SfIcon component used to render the predefined syncfusion icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property or custom font icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            </summary>\n            <example>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Italic\" Title=\"Italic\"></SfIcon>\n            ]]></code>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"e-icons e-bold\" Title=\"Bold\"></SfIcon>\n            ]]></code>\n            The below example shows loading third party icon using <see cref=\"T:Syncfusion.Blazor.Buttons.SfIcon\" /> component.\n            Plus icon were loaded from open iconic, by defining the open iconic font CSS.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus\" Title=\"Plus\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to icon element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, font size of the icon customized using <c>@attributes</c> directive.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Copy\" @attributes=\"customAttribute\"></SfIcon>\n            @code{\n               Dictionary<string, object> customAttribute = new Dictionary<string, object>()\n               {\n                   { \"style\", \"font-size: 20px\" }\n               };\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS class string which can be used to provide custom icon or custom style for icons.\n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to provide custom icon or custom style for icons. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            IconCss property used to append custom class to the predefined icons. This property will also render the customized icons like font-awesome icons.\n            </remarks>\n            <example>\n            In the below example custom icon is loaded using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-home\"></SfIcon>\n            ]]></code>\n            In the below example icon color is customized using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus color-red\"></SfIcon>\n            <style>\n                .color-red {\n                   color: red; \n                }\n            </style>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "Syncfusion.Blazor.Buttons.IconName",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the name of the built-in syncfusion icons to render. \n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> enumeration.\n            </value>\n            <remarks>\n            This property is used to render icons from predefined <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> options. You can use <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> to load custom icons.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Bold\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Syncfusion.Blazor.Buttons.IconSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size of the icon.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconSize\" /> enumeration that specifies the size of the icon. \n            The default value is <see cref=\"F:Syncfusion.Blazor.Buttons.IconSize.Medium\" />\n            </value>\n            <remarks>\n            The Size property used to set font size for icons. This property will considered only when icons are rendered using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Paste\" Size=\"IconSize.Large\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets title attribute for icon.\n            </summary>\n            <value>\n            Accepts a string. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Title attribute used to improve accessibility with screen readers and show a tooltip on mouse over the icon.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Cut\" Title=\"Cut\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfIcon"
        }
      },
      {
        "HashCode": 1661007449,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfIcon",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            SfIcon component used to render the predefined syncfusion icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property or custom font icons using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            </summary>\n            <example>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Italic\" Title=\"Italic\"></SfIcon>\n            ]]></code>\n            The below example shows loading syncfusion icon using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"e-icons e-bold\" Title=\"Bold\"></SfIcon>\n            ]]></code>\n            The below example shows loading third party icon using <see cref=\"T:Syncfusion.Blazor.Buttons.SfIcon\" /> component.\n            Plus icon were loaded from open iconic, by defining the open iconic font CSS.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus\" Title=\"Plus\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to icon element.\n            </summary>\n            <remarks>\n            Additional attributes can be added by specifying as inline attributes or by specifying <c>@attributes</c> directive.\n            </remarks>\n            <example>\n            In the below code example, font size of the icon customized using <c>@attributes</c> directive.\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Copy\" @attributes=\"customAttribute\"></SfIcon>\n            @code{\n               Dictionary<string, object> customAttribute = new Dictionary<string, object>()\n               {\n                   { \"style\", \"font-size: 20px\" }\n               };\n            }\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconCss",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS class string which can be used to provide custom icon or custom style for icons.\n            </summary>\n            <value>\n            Accepts a CSS class string separated by space to provide custom icon or custom style for icons. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            IconCss property used to append custom class to the predefined icons. This property will also render the customized icons like font-awesome icons.\n            </remarks>\n            <example>\n            In the below example custom icon is loaded using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-home\"></SfIcon>\n            ]]></code>\n            In the below example icon color is customized using <c>IconCss</c> property.\n            <code><![CDATA[\n            <SfIcon IconCss=\"oi oi-plus color-red\"></SfIcon>\n            <style>\n                .color-red {\n                   color: red; \n                }\n            </style>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconCss"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "Syncfusion.Blazor.Buttons.IconName",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the name of the built-in syncfusion icons to render. \n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> enumeration.\n            </value>\n            <remarks>\n            This property is used to render icons from predefined <see cref=\"T:Syncfusion.Blazor.Buttons.IconName\" /> options. You can use <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.IconCss\" /> to load custom icons.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Bold\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Syncfusion.Blazor.Buttons.IconSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size of the icon.\n            </summary>\n            <value>\n            One of the <see cref=\"T:Syncfusion.Blazor.Buttons.IconSize\" /> enumeration that specifies the size of the icon. \n            The default value is <see cref=\"F:Syncfusion.Blazor.Buttons.IconSize.Medium\" />\n            </value>\n            <remarks>\n            The Size property used to set font size for icons. This property will considered only when icons are rendered using <see cref=\"P:Syncfusion.Blazor.Buttons.SfIcon.Name\" /> property.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Paste\" Size=\"IconSize.Large\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets title attribute for icon.\n            </summary>\n            <value>\n            Accepts a string. The default value is <c>String.Empty</c>.\n            </value>\n            <remarks>\n            Title attribute used to improve accessibility with screen readers and show a tooltip on mouse over the icon.\n            </remarks>\n            <example>\n            <code><![CDATA[\n            <SfIcon Name=\"IconName.Cut\" Title=\"Cut\"></SfIcon>\n            ]]></code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2032346339,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfIcon.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 18564832,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfIcon.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Gets or sets the child content for Icon component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfIcon"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfIcon.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2120972033,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n            It contains checked and unchecked states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfRadioButton<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions label `before`/`after` the RadioButton.\n            The possible values are:\n            - Before: The label is positioned to left of the RadioButton.\n            - After: The label is positioned to right of the RadioButton.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Event trigger when the RadioButton state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1944099568,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The RadioButton is a graphical user interface element that allows you to select one option from the choices.\n            It contains checked and unchecked states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfRadioButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfRadioButton<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the caption for the RadioButton, that describes the purpose of the RadioButton.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Buttons.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Positions label `before`/`after` the RadioButton.\n            The possible values are:\n            - Before: The label is positioned to left of the RadioButton.\n            - After: The label is positioned to right of the RadioButton.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Event trigger when the RadioButton state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1470368906,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1257587902,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfRadioButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1233945226,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfSwitch"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfSwitch<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a text that indicates the Switch is in checked state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a text that indicates the Switch is in unchecked state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Triggers when Switch state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1314768524,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <summary>\n            The Switch is a graphical user interface element that allows you to toggle between checked and unchecked states.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfSwitch"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TChecked",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TChecked for the Syncfusion.Blazor.Buttons.SfSwitch<TChecked> component.",
            "Metadata": {
              "Common.PropertyName": "TChecked",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a text that indicates the Switch is in checked state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffLabel",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a text that indicates the Switch is in unchecked state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Buttons.ChangeEventArgs<TChecked>>",
            "Documentation": "\n            <summary>\n            Triggers when Switch state has been changed by user interaction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChange",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the component wrapper element.\n            You can add custom styles to the component by using this property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines name attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines value attribute for the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Checked",
            "TypeName": "TChecked",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is checked or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Checked",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TChecked>>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies a value that indicates whether the component is disabled or not.\n            When set to true, the component will be in disabled state.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable rendering component in right to left direction.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable or disable persisting component's state between page reloads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <exclude />\n            <summary>\n            You can add the additional html attributes such as title , native events etc., to the element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Created",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers once the component rendering is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Created",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1990487461,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfSwitch"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1425060030,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "\n            <exclude />\n            <summary>\n            Defines the caption for the input, that describes the purpose of the input including HTML and its customization.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Buttons.SfSwitch"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -223040695,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartBorder"
        }
      },
      {
        "HashCode": 1380051277,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1601605461,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 349183936,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1264272038,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartCenter",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets Center of the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartCenter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            X value of the center.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Y value of the center.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartCenter"
        }
      },
      {
        "HashCode": -78909477,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartCenter",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets Center of the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartCenter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            X value of the center.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Y value of the center.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartCenter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1268638544,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartCenter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2114893185,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartCenter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -586656579,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEvents",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the events for the accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnPrintComplete",
            "TypeName": "System.Action",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPrintComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnExportComplete",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnExportComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after resizing of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before series getting renderred.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggeres before the point rendering.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendItemRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before legend getting rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendItemRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationPointEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the selection is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Loaded",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the chart render completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Loaded",
              "Components.DelegateSignature": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEvents"
        }
      },
      {
        "HashCode": 905057449,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEvents",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the events for the accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnPrintComplete",
            "TypeName": "System.Action",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPrintComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnExportComplete",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnExportComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after resizing of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before series getting renderred.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggeres before the point rendering.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendItemRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before legend getting rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendItemRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationPointEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the selection is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Loaded",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the chart render completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Loaded",
              "Components.DelegateSignature": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEvents",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1527394743,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the margin of the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartMargin"
        }
      },
      {
        "HashCode": -1444831951,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the margin of the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1008408572,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -322170303,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1141743144,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSelectedDataIndex"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex"
        }
      },
      {
        "HashCode": 708243450,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 331735568,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSelectedDataIndex"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 248997019,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -457251659,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSelectedDataIndexes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes"
        }
      },
      {
        "HashCode": 463225502,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2023506552,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSelectedDataIndexes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 243294761,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1131902235,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the configurartion of the subTitle style in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSubTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle"
        }
      },
      {
        "HashCode": 1611375567,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the configurartion of the subTitle style in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 508933542,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSubTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1809372553,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 241911745,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the configurartion of the title style in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle"
        }
      },
      {
        "HashCode": -445684250,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the configurartion of the title style in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            FontFamily for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -691751872,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 292573164,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -860402661,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            Specifies the customization of annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the Template content of this annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContentTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Content of the annotation, which accepts the id of the custom element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CoordinateUnits",
            "TypeName": "Syncfusion.Blazor.Charts.Units",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the coordinate units of the annotation. They are\n            Pixel - Annotation renders based on x and y pixel value.\n            Point - Annotation renders based on x and y axis value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CoordinateUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Information about annotation for assistive technology.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Region",
            "TypeName": "Syncfusion.Blazor.Charts.Regions",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the regions of the annotation. They are\n            Chart - Annotation renders based on chart coordinates.\n            Series - Annotation renders based on series coordinates.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Region"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` X specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` Y specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation"
        }
      },
      {
        "HashCode": -273751337,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            Specifies the customization of annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContentTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the Template content of this annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContentTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Content of the annotation, which accepts the id of the custom element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CoordinateUnits",
            "TypeName": "Syncfusion.Blazor.Charts.Units",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the coordinate units of the annotation. They are\n            Pixel - Annotation renders based on x and y pixel value.\n            Point - Annotation renders based on x and y axis value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CoordinateUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Information about annotation for assistive technology.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Region",
            "TypeName": "Syncfusion.Blazor.Charts.Regions",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the regions of the annotation. They are\n            Chart - Annotation renders based on chart coordinates.\n            Series - Annotation renders based on series coordinates.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Region"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` X specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` Y specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 466120690,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -494595130,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1573477743,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Template content of this annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ContentTemplate",
            "ParentTag": "AccumulationChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1015692473,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Template content of this annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ContentTemplate",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -886327985,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotations are user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartAnnotations"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations"
        }
      },
      {
        "HashCode": 1625020912,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotations are user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1123745421,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartAnnotations"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2063986781,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1338039131,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border for that Accumulation Chart's legend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartLegendBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder"
        }
      },
      {
        "HashCode": -1826754845,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border for that Accumulation Chart's legend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 818782520,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartLegendBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -747427297,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1955110304,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the text style of the accumulation chart's texts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartLegendFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont"
        }
      },
      {
        "HashCode": -1541799938,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the text style of the accumulation chart's texts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1608193932,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartLegendFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -250235466,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1424786251,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and set the margin for the Accumulation chart's margin.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartLegendMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin"
        }
      },
      {
        "HashCode": -1876648334,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and set the margin for the Accumulation chart's margin.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 783658396,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartLegendMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 607330819,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1445781870,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Legend is used to help readers understand the plotted data.\n            The chart legend shows information about the datasets that are appearing on the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartLegendSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Legend in chart can be aligned as follows:\n             Near: Aligns the legend to the left of the chart.\n             Center: Aligns the legend to the center of the chart.\n             Far: Aligns the legend to the right of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the legend that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for legends.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Location",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation",
            "Documentation": "\n            <summary>\n            Specifies the location of the legend, relative to the chart.\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `Position` to be `Custom`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Location"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin",
            "Documentation": "\n            <summary>\n             Options to customize left, right, top and bottom margins of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Opacity of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Option to customize the padding between legend items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Position of the legend in the chart are,\n            Auto: Places the legend based on area type.\n            Top: Displays the legend at the top of the chart.\n            Left: Displays the legend at the left of the chart.\n            Bottom: Displays the legend at the bottom of the chart.\n            Right: Displays the legend at the right of the chart.\n            Custom: Displays the legend  based on the given x and y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeHeight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape height of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapePadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Padding between the legend shape and text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape width of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex legendItem for the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont",
            "Documentation": "\n            <summary>\n            Options to customize the legend text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleVisibility",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series' visibility collapses based on the legend visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleVisibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, legend will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to inverse legend item content (image and text).\n            </summary>\n            <value> \n            true if the legend should be inversed; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reverse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to reverse the legend items order.\n            </summary>\n            <value> \n            true if the legend should be reverse; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reverse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.LabelOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \n             <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextWrap",
            "TypeName": "Syncfusion.Blazor.TextWrap",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> \n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \n            </summary> \n            <value> \n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings"
        }
      },
      {
        "HashCode": -598336066,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Legend is used to help readers understand the plotted data.\n            The chart legend shows information about the datasets that are appearing on the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Legend in chart can be aligned as follows:\n             Near: Aligns the legend to the left of the chart.\n             Center: Aligns the legend to the center of the chart.\n             Far: Aligns the legend to the right of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the legend that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for legends.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Location",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation",
            "Documentation": "\n            <summary>\n            Specifies the location of the legend, relative to the chart.\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `Position` to be `Custom`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Location"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendMargin",
            "Documentation": "\n            <summary>\n             Options to customize left, right, top and bottom margins of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Opacity of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Option to customize the padding between legend items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Position of the legend in the chart are,\n            Auto: Places the legend based on area type.\n            Top: Displays the legend at the top of the chart.\n            Left: Displays the legend at the left of the chart.\n            Bottom: Displays the legend at the bottom of the chart.\n            Right: Displays the legend at the right of the chart.\n            Custom: Displays the legend  based on the given x and y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeHeight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape height of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapePadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Padding between the legend shape and text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape width of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex legendItem for the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendFont",
            "Documentation": "\n            <summary>\n            Options to customize the legend text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleVisibility",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series' visibility collapses based on the legend visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleVisibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, legend will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to inverse legend item content (image and text).\n            </summary>\n            <value> \n            true if the legend should be inversed; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reverse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to reverse the legend items order.\n            </summary>\n            <value> \n            true if the legend should be reverse; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reverse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.LabelOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \n             <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextWrap",
            "TypeName": "Syncfusion.Blazor.TextWrap",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> \n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \n            </summary> \n            <value> \n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 302625164,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartLegendSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -698190981,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1253767157,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Spectified the co-ordinates of the legend in the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation"
        }
      },
      {
        "HashCode": 1534380750,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Spectified the co-ordinates of the legend in the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -64604070,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 643499954,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1308442113,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Animation property for the Accumulation chart's series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The option to delay animation of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation"
        }
      },
      {
        "HashCode": 467265675,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Animation property for the Accumulation chart's series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The option to delay animation of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -422684102,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 687905020,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -795634524,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the connector line property for the Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            dashArray of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Length of the connector line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            specifies the type of the connector line. They are\n            Smooth\n            Line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Width of the connector line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector"
        }
      },
      {
        "HashCode": 1282405101,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the connector line property for the Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            dashArray of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Length of the connector line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            specifies the type of the connector line. They are\n            Smooth\n            Line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Width of the connector line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 498965367,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -139833481,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1976289446,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and the border for Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartDataLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder"
        }
      },
      {
        "HashCode": -1950275506,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and the border for Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 551280634,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartDataLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 459157100,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1306166660,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the text style for Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartDataLabelFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont"
        }
      },
      {
        "HashCode": 78773257,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the text style for Accumulation chart's datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1195531847,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartDataLabelFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1380230197,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1041462650,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the emptyPoint's border for the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartEmptyPointBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder"
        }
      },
      {
        "HashCode": 69578525,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the emptyPoint's border for the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1858623093,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartEmptyPointBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1972170063,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1986740818,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets configurarion of empty point settings for the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartEmptyPointSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            To customize the fill color of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.EmptyPointMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            To customize the mode of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings"
        }
      },
      {
        "HashCode": -1130322647,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets configurarion of empty point settings for the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            To customize the fill color of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.EmptyPointMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            To customize the mode of empty points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -935833721,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartEmptyPointSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 600045977,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 323235988,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeries",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Series represents the collection of data in the Accumulation chart.\n            Gets and set the Series of the Accumulation series.\n            </summary>\n            <summary>\n            Sets and gets the options for customizing the chart series of the accumulation chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation",
            "Documentation": "\n            <summary>\n            Options for customizing the animation for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder",
            "Documentation": "\n            <summary>\n            Options for customizing the border of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings",
            "Documentation": "\n            <summary>\n            The data label for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyPointSettings",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings",
            "Documentation": "\n            <summary>\n            Options to customize the empty points in series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyPointSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To enable or disable tooltip for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            End angle for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Explode",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, series points will be exploded on mouse click or touch.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Explode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, all the points in the series will get exploded on load.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Index of the point, to be exploded on load.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeOffset",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Distance of the point from the center, which takes values in both pixels and percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GapRatio",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GapRatio"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupMode",
            "TypeName": "Syncfusion.Blazor.Charts.GroupMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            AccumulationSeries y values less than groupMode are combined into single slice named others.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupTo",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            AccumulationSeries y values less than groupTo are combined into single slice named others.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupTo"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the height of the funnel/pyramid with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InnerRadius",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InnerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The shape of the legend. Each series has its own legend shape. They are\n            Circle - Renders a circle.\n            Rectangle - Renders a rectangle.\n            Triangle - Renders a triangle.\n            Diamond - Renders a diamond.\n            Cross - Renders a cross.\n            HorizontalLine - Renders a horizontalLine.\n            VerticalLine - Renders a verticalLine.\n            Pentagon - Renders a pentagon.\n            InvertedTriangle - Renders a invertedTriangle.\n            SeriesType -Render a legend shape based on series type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the series name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NeckHeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the height of the funnel neck with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NeckHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NeckWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the width of the funnel neck with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NeckWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Palettes",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            Palette for series points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Palettes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointColorMapping",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the color value of point.\n            It is applicable for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointColorMapping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PyramidMode",
            "TypeName": "Syncfusion.Blazor.Charts.PyramidMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines how the values have to be reflected, whether through height/surface of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PyramidMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Radius of the pie series and its values in percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Custom style for the selected series or points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the Start angle for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipMappingName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The provided value will be considered as a tooltip Mapping name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipMappingName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specify the type of the series in accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the series visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the width of the funnel/pyramid with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the x value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeries"
        }
      },
      {
        "HashCode": 214886419,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeries",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Series represents the collection of data in the Accumulation chart.\n            Gets and set the Series of the Accumulation series.\n            </summary>\n            <summary>\n            Sets and gets the options for customizing the chart series of the accumulation chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartAnimation",
            "Documentation": "\n            <summary>\n            Options for customizing the animation for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder",
            "Documentation": "\n            <summary>\n            Options for customizing the border of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings",
            "Documentation": "\n            <summary>\n            The data label for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyPointSettings",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings",
            "Documentation": "\n            <summary>\n            Options to customize the empty points in series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyPointSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To enable or disable tooltip for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            End angle for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Explode",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, series points will be exploded on mouse click or touch.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Explode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, all the points in the series will get exploded on load.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Index of the point, to be exploded on load.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExplodeOffset",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Distance of the point from the center, which takes values in both pixels and percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExplodeOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GapRatio",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GapRatio"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupMode",
            "TypeName": "Syncfusion.Blazor.Charts.GroupMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            AccumulationSeries y values less than groupMode are combined into single slice named others.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupTo",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            AccumulationSeries y values less than groupTo are combined into single slice named others.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupTo"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the height of the funnel/pyramid with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InnerRadius",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "InnerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The shape of the legend. Each series has its own legend shape. They are\n            Circle - Renders a circle.\n            Rectangle - Renders a rectangle.\n            Triangle - Renders a triangle.\n            Diamond - Renders a diamond.\n            Cross - Renders a cross.\n            HorizontalLine - Renders a horizontalLine.\n            VerticalLine - Renders a verticalLine.\n            Pentagon - Renders a pentagon.\n            InvertedTriangle - Renders a invertedTriangle.\n            SeriesType -Render a legend shape based on series type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the series name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NeckHeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the height of the funnel neck with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NeckHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NeckWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the width of the funnel neck with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NeckWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Palettes",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            Palette for series points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Palettes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointColorMapping",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the color value of point.\n            It is applicable for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointColorMapping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PyramidMode",
            "TypeName": "Syncfusion.Blazor.Charts.PyramidMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines how the values have to be reflected, whether through height/surface of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PyramidMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Radius of the pie series and its values in percentage.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Custom style for the selected series or points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the Start angle for a series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipMappingName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The provided value will be considered as a tooltip Mapping name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipMappingName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specify the type of the series in accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the series visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the width of the funnel/pyramid with respect to the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the x value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeries",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1539157845,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1252269727,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 197410851,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border configuration for the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSeriesBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder"
        }
      },
      {
        "HashCode": 1455443330,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border configuration for the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1472373247,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSeriesBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1174757082,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1029659314,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Series represents the collection of data in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartSeriesCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection"
        }
      },
      {
        "HashCode": -2077516243,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Series represents the collection of data in the Accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1815330511,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartSeriesCollection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -51433311,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1419336912,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Datalabels shows the information about the data points in the accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationDataLabelSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Angle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies angle for data label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Angle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder",
            "Documentation": "\n            <summary>\n            Option for customizing the border lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ConnectorStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector",
            "Documentation": "\n            <summary>\n            Options for customize the connector line in series.\n            This property is applicable for Pie, Funnel and Pyramid series.\n            The default connector length for Pie series is '4%'. For other series, it is null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ConnectorStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRotation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables rotation for data label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the data label, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Font",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont",
            "Documentation": "\n            <summary>\n            Option for customizing the data label text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Font"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the data label value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationLabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of data label. They are.\n            Outside - Places label outside the point.\n            Inside - Places label inside the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The roundedCornerX for the data label. It requires `Border` values not to be null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The roundedCornerY for the data label. It requires `Border` values not to be null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>",
            "Documentation": "\n            <summary>\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\n            text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, data label for series gets render.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, datalabels will be visible for zero points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"
        }
      },
      {
        "HashCode": -761948134,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Datalabels shows the information about the data points in the accumulation chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Angle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies angle for data label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Angle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder",
            "Documentation": "\n            <summary>\n            Option for customizing the border lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ConnectorStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartConnector",
            "Documentation": "\n            <summary>\n            Options for customize the connector line in series.\n            This property is applicable for Pie, Funnel and Pyramid series.\n            The default connector length for Pie series is '4%'. For other series, it is null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ConnectorStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRotation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables rotation for data label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the data label, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Font",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont",
            "Documentation": "\n            <summary>\n            Option for customizing the data label text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Font"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field which contains the data label value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationLabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of data label. They are.\n            Outside - Places label outside the point.\n            Inside - Places label inside the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The roundedCornerX for the data label. It requires `Border` values not to be null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The roundedCornerY for the data label. It requires `Border` values not to be null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>",
            "Documentation": "\n            <summary>\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\n            text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, data label for series gets render.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, datalabels will be visible for zero points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 495234139,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationDataLabelSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1054171004,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2124616663,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\n            text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "AccumulationDataLabelSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1787223862,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\n            text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 756124293,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Accumulation chart is a Data visualization component which is divided into slices to represent the given numerical values.\n            In this each slice represents its corresponding numerical value.\n            </summary>\n            <summary>\n            The accumulation chart control is used to visualize the data in the different types of graphical representations with built-in features like Grouping, legends, tooltip, and more.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfAccumulationChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the chart, which accepts data in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background image of the chart that accepts data in string as url link or location of an image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n             <summary>\n             Specifies the dataSource for the AccumulationChart. It can be an array of JSON objects or an instance of DataManager.\n            \n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSourceChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers when dataSource for the chart changed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSourceChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the animation for accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableBorderOnMouseMove",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the border in pie chart while mouse moving.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableBorderOnMouseMove"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSmartLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, labels for the point will be placed smartly without overlapping.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSmartLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the chart as a string in order to provide input as both like '100px' or '100%'.\n            If specified as '100%, chart will render to the full height of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightMode",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether point has to get highlighted or not. Takes chartItems either 'None 'or 'Point'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether series or data point has to be selected. They are,\n            none: sets none as highlighting pattern to accumulation chart.\n            chessboard: sets chess board as highlighting pattern to accumulation chart.\n            dots: sets dots as highlighting pattern to accumulation chart.\n            diagonalForward: sets diagonal forward as highlighting pattern to accumulation chart.\n            crosshatch: sets crosshatch as highlighting pattern to accumulation chart.\n            pacman: sets pacman highlighting  pattern to accumulation chart.\n            diagonalbackward: sets diagonal backward as highlighting pattern to accumulation chart.\n            grid: sets grid as highlighting pattern to accumulation chart.\n            turquoise: sets turquoise as highlighting pattern to accumulation chart.\n            star: sets star as highlighting  pattern to accumulation chart.\n            triangle: sets triangle as highlighting pattern to accumulation chart.\n            circle: sets circle as highlighting  pattern to accumulation chart.\n            tile: sets tile as highlighting pattern to accumulation chart.\n            horizontaldash: sets horizontal dash as highlighting pattern to accumulation chart.\n            verticaldash: sets vertical dash as highlighting pattern to accumulation chart.\n            rectangle: sets rectangle as highlighting  pattern to accumulation chart.\n            box: sets box as highlighting pattern to accumulation chart.\n            verticalstripe: sets vertical stripe as highlighting  pattern to accumulation chart.\n            horizontalstripe: sets horizontal stripe as highlighting  pattern to accumulation chart.\n            bubble: sets bubble as highlighting  pattern to accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsMultiSelect",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the multi selection in accumulation chart. It requires `SelectionMode` to be `Point`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsMultiSelect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether point has to get selected or not. Takes chartItems either 'None 'or 'Point'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether series or data point for accumulation chart has to be selected. They are,\n            none: sets none as selecting pattern to accumulation chart .\n            chessboard: sets chess board as selecting pattern accumulation chart .\n            dots: sets dots as  selecting pattern accumulation chart .\n            diagonalForward: sets diagonal forward as selecting pattern to accumulation chart .\n            crosshatch: sets crosshatch as selecting pattern to accumulation chart.\n            pacman: sets pacman selecting pattern to accumulation chart.\n            diagonalbackward: sets diagonal backward as selecting pattern to accumulation chart.\n            grid: sets grid as selecting pattern to accumulation chart.\n            turquoise: sets turquoise as selecting pattern to accumulation chart.\n            star: sets star as selecting pattern to accumulation chart.\n            triangle: sets triangle as selecting pattern to accumulation chart.\n            circle: sets circle as selecting pattern to accumulation chart.\n            tile: sets tile as selecting pattern to accumulation chart.\n            horizontaldash: sets horizontal dash as selecting pattern to accumulation chart.\n            verticaldash: sets vertical dash as selecting pattern to accumulation chart.\n            rectangle: sets rectangle as selecting pattern.\n            box: sets box as selecting pattern to accumulation chart.\n            verticalstripe: sets vertical stripe as  selecting pattern to accumulation chart.\n            horizontalstripe: sets horizontal stripe as selecting pattern to accumulation chart.\n            bubble: sets bubble as selecting pattern to accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SubTitle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the SubTitle of the accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SubTitle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "Syncfusion.Blazor.Theme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the theme for accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Title of the accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableGroupingSeparator",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether a grouping separator should be used for a number.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableGroupingSeparator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the chart as a string in order to provide input as both like '100px' or '100%'.\n            If specified as '100%, chart will render to the full width of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCanvas",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCanvas"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableExport",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableExport"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets id attribute for chart element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets content for chart element including HTML and its customizations.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the chart element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\n            </summary>\n            <value> \n            true if the chart should be in rtl direction; otherwise, false.\n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart"
        }
      },
      {
        "HashCode": 1229791358,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Accumulation chart is a Data visualization component which is divided into slices to represent the given numerical values.\n            In this each slice represents its corresponding numerical value.\n            </summary>\n            <summary>\n            The accumulation chart control is used to visualize the data in the different types of graphical representations with built-in features like Grouping, legends, tooltip, and more.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.SfAccumulationChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background color of the chart, which accepts data in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background image of the chart that accepts data in string as url link or location of an image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n             <summary>\n             Specifies the dataSource for the AccumulationChart. It can be an array of JSON objects or an instance of DataManager.\n            \n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSourceChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Triggers when dataSource for the chart changed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSourceChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the animation for accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableBorderOnMouseMove",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the border in pie chart while mouse moving.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableBorderOnMouseMove"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSmartLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, labels for the point will be placed smartly without overlapping.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSmartLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the chart as a string in order to provide input as both like '100px' or '100%'.\n            If specified as '100%, chart will render to the full height of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightMode",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether point has to get highlighted or not. Takes chartItems either 'None 'or 'Point'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether series or data point has to be selected. They are,\n            none: sets none as highlighting pattern to accumulation chart.\n            chessboard: sets chess board as highlighting pattern to accumulation chart.\n            dots: sets dots as highlighting pattern to accumulation chart.\n            diagonalForward: sets diagonal forward as highlighting pattern to accumulation chart.\n            crosshatch: sets crosshatch as highlighting pattern to accumulation chart.\n            pacman: sets pacman highlighting  pattern to accumulation chart.\n            diagonalbackward: sets diagonal backward as highlighting pattern to accumulation chart.\n            grid: sets grid as highlighting pattern to accumulation chart.\n            turquoise: sets turquoise as highlighting pattern to accumulation chart.\n            star: sets star as highlighting  pattern to accumulation chart.\n            triangle: sets triangle as highlighting pattern to accumulation chart.\n            circle: sets circle as highlighting  pattern to accumulation chart.\n            tile: sets tile as highlighting pattern to accumulation chart.\n            horizontaldash: sets horizontal dash as highlighting pattern to accumulation chart.\n            verticaldash: sets vertical dash as highlighting pattern to accumulation chart.\n            rectangle: sets rectangle as highlighting  pattern to accumulation chart.\n            box: sets box as highlighting pattern to accumulation chart.\n            verticalstripe: sets vertical stripe as highlighting  pattern to accumulation chart.\n            horizontalstripe: sets horizontal stripe as highlighting  pattern to accumulation chart.\n            bubble: sets bubble as highlighting  pattern to accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsMultiSelect",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, enables the multi selection in accumulation chart. It requires `SelectionMode` to be `Point`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsMultiSelect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether point has to get selected or not. Takes chartItems either 'None 'or 'Point'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether series or data point for accumulation chart has to be selected. They are,\n            none: sets none as selecting pattern to accumulation chart .\n            chessboard: sets chess board as selecting pattern accumulation chart .\n            dots: sets dots as  selecting pattern accumulation chart .\n            diagonalForward: sets diagonal forward as selecting pattern to accumulation chart .\n            crosshatch: sets crosshatch as selecting pattern to accumulation chart.\n            pacman: sets pacman selecting pattern to accumulation chart.\n            diagonalbackward: sets diagonal backward as selecting pattern to accumulation chart.\n            grid: sets grid as selecting pattern to accumulation chart.\n            turquoise: sets turquoise as selecting pattern to accumulation chart.\n            star: sets star as selecting pattern to accumulation chart.\n            triangle: sets triangle as selecting pattern to accumulation chart.\n            circle: sets circle as selecting pattern to accumulation chart.\n            tile: sets tile as selecting pattern to accumulation chart.\n            horizontaldash: sets horizontal dash as selecting pattern to accumulation chart.\n            verticaldash: sets vertical dash as selecting pattern to accumulation chart.\n            rectangle: sets rectangle as selecting pattern.\n            box: sets box as selecting pattern to accumulation chart.\n            verticalstripe: sets vertical stripe as  selecting pattern to accumulation chart.\n            horizontalstripe: sets horizontal stripe as selecting pattern to accumulation chart.\n            bubble: sets bubble as selecting pattern to accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SubTitle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the SubTitle of the accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SubTitle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "Syncfusion.Blazor.Theme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the theme for accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the Title of the accumulation chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableGroupingSeparator",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether a grouping separator should be used for a number.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableGroupingSeparator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the chart as a string in order to provide input as both like '100px' or '100%'.\n            If specified as '100%, chart will render to the full width of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePersistence",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePersistence"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCanvas",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCanvas"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableExport",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableExport"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets id attribute for chart element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets content for chart element including HTML and its customizations.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines class/multiple classes separated by a space in the chart element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\n            </summary>\n            <value> \n            true if the chart should be in rtl direction; otherwise, false.\n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 215441486,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets content for chart element including HTML and its customizations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfAccumulationChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2001559646,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets content for chart element including HTML and its customizations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.SfAccumulationChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -430206935,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border of the accumulation chart's tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartTooltipBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder"
        }
      },
      {
        "HashCode": -172636427,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the border of the accumulation chart's tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1395611153,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartTooltipBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1865941935,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1182778669,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Tooltip shows the information about the data points when users hover over data points on your chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder",
            "Documentation": "\n            <summary>\n            Options to customize tooltip borders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Duration for the ToolTip animation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, ToolTip will animate while moving from one point to another.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMarker",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMarker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTextWrap",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To wrap the tooltip long text based on available space.\n            This is only application for chart tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FadeOutDuration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Fade Out duration for the ToolTip hide.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FadeOutDuration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Format the ToolTip content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Header for tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shared",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, a single ToolTip will be displayed for every index.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shared"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"
        }
      },
      {
        "HashCode": -382591591,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Tooltip shows the information about the data points when users hover over data points on your chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder",
            "Documentation": "\n            <summary>\n            Options to customize tooltip borders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Duration for the ToolTip animation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, ToolTip will animate while moving from one point to another.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMarker",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMarker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTextWrap",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To wrap the tooltip long text based on available space.\n            This is only application for chart tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FadeOutDuration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Fade Out duration for the ToolTip hide.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FadeOutDuration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Format the ToolTip content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Header for tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shared",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, a single ToolTip will be displayed for every index.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shared"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1198627369,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartTooltipSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -689249371,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1791258225,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "AccumulationChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 900462862,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1631388313,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Textstyle of the Accumulation chart's tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AccumulationChartTooltipTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle"
        }
      },
      {
        "HashCode": -1686834091,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the Textstyle of the Accumulation chart's tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -98916018,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AccumulationChartTooltipTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -51551605,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Gets and sets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2076712912,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            Specifies the customization of annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ContentTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Content Template for the annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContentTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CoordinateUnits",
            "TypeName": "Syncfusion.Blazor.Charts.Units",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the coordinate units of the annotation. They are\n             Pixel - Annotation renders based on x and y pixel value.\n             Point - Annotation renders based on x and y axis value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CoordinateUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Information about annotation for assistive technology.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Region",
            "TypeName": "Syncfusion.Blazor.Charts.Regions",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the regions of the annotation. They are\n             Chart - Annotation renders based on chart coordinates.\n             Series - Annotation renders based on series coordinates.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Region"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` X specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of horizontal axis associated with the annotation.\n            It requires `Axes` of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` Y specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of vertical axis associated with the annotation.\n            It requires `Axes` of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation"
        }
      },
      {
        "HashCode": 286791690,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            Specifies the customization of annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ContentTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Content Template for the annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContentTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CoordinateUnits",
            "TypeName": "Syncfusion.Blazor.Charts.Units",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the coordinate units of the annotation. They are\n             Pixel - Annotation renders based on x and y pixel value.\n             Point - Annotation renders based on x and y axis value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CoordinateUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Information about annotation for assistive technology.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Region",
            "TypeName": "Syncfusion.Blazor.Charts.Regions",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the regions of the annotation. They are\n             Chart - Annotation renders based on chart coordinates.\n             Series - Annotation renders based on series coordinates.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Region"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` X specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of horizontal axis associated with the annotation.\n            It requires `Axes` of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            if set coordinateUnit as `Pixel` Y specifies the axis value\n            else is specifies pixel or percentage of coordinate.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of vertical axis associated with the annotation.\n            It requires `Axes` of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1625700816,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Content Template for the annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ContentTemplate",
            "ParentTag": "ChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 838278420,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Content Template for the annotation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ContentTemplate",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 552698753,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -335115303,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAnnotation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -16817067,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotations",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAnnotations"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotations"
        }
      },
      {
        "HashCode": 766850618,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotations",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Annotation is a user defined HTML element that can be placed on chart\n            We can use annotations to pile up the visual elegance of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAnnotations"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotations",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 472304198,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAnnotations"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1676639293,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAnnotations"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 666432990,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAnnotationRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer"
        }
      },
      {
        "HashCode": -2077227849,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -743643098,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAnnotationRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -307453443,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1719092035,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartArea",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the ChartArea of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background of the chart area that accepts value in hex and rgba as a valid CSS color string..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background image of the chart area that accepts value in string as url link or location of an image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>  \n             Gets and sets the width for chart area. Accepts value in percentage and in pixel.  \n            </summary>\n            <value> \n             Specifies the width for the chart area. The default value is <c>null</c>.\n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity for background.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartArea"
        }
      },
      {
        "HashCode": -947830612,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartArea",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the ChartArea of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background of the chart area that accepts value in hex and rgba as a valid CSS color string..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background image of the chart area that accepts value in string as url link or location of an image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>  \n             Gets and sets the width for chart area. Accepts value in percentage and in pixel.  \n            </summary>\n            <value> \n             Specifies the width for the chart area. The default value is <c>null</c>.\n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity for background.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the chart area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -898315912,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartArea.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartArea"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartArea.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1967281792,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartArea.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartArea"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartArea.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -700320706,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAreaBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the ChartArea border of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAreaBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder"
        }
      },
      {
        "HashCode": 35845028,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAreaBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the ChartArea border of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAreaBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1685536537,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAreaBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1852303689,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAreaBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -437624205,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Border of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartBorder"
        }
      },
      {
        "HashCode": -1299294078,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Border of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -298759067,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 137987880,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1193998299,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the margin of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMargin"
        }
      },
      {
        "HashCode": -1595885751,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the margin of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -87917286,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1216017724,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -826411734,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSubTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Options to customize the subtitle style of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSubTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSubTitleStyle"
        }
      },
      {
        "HashCode": -375953639,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSubTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Options to customize the subtitle style of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSubTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSubTitleStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 847279139,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSubTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2085895553,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSubTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1081871139,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Options to customize the title style of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTitleStyle"
        }
      },
      {
        "HashCode": -1727467702,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Options to customize the title style of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTitleStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 952392118,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1377765235,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1148281710,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartColumn",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the columns.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the column as a string accepts input both as like '100px' or '100%'.\n            If specified as '100%, column renders to the full width of its chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumn"
        }
      },
      {
        "HashCode": 1729562951,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartColumn",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the columns.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the column as a string accepts input both as like '100px' or '100%'.\n            If specified as '100%, column renders to the full width of its chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumn",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 482620985,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartColumn.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumn.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1767510072,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartColumn.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumn.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1750483676,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartColumns",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartColumns"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumns"
        }
      },
      {
        "HashCode": 1621401967,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartColumns",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartColumns"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumns",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2010276834,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartColumns.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartColumns"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumns.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2146126824,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartColumns.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartColumns"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartColumns.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1207553378,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartRow",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the columns.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the column as a string accepts input both as like '100px' or '100%'.\n            If specified as '100%, column renders to the full width of its chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRow"
        }
      },
      {
        "HashCode": 48224614,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartRow",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the columns.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the column as a string accepts input both as like '100px' or '100%'.\n            If specified as '100%, column renders to the full width of its chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -875981616,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartRow.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 582549005,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartRow.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1758481608,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartRows",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRows"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRows"
        }
      },
      {
        "HashCode": 816483211,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartRows",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartRows"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRows",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1989915835,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartRows.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRows"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRows.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2140080972,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartRows.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartRows"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartRows.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2037230360,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxes"
        }
      },
      {
        "HashCode": -132105220,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxes",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 547246484,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -451545298,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 155313116,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxis"
        }
      },
      {
        "HashCode": -18318691,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 966786676,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 105865481,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2101981712,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the border width of axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder"
        }
      },
      {
        "HashCode": -931451385,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the border width of axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 98293582,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1285288707,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1693824215,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of axis's labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisLabelStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle"
        }
      },
      {
        "HashCode": -2122588956,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of axis's labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1492732293,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisLabelStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -995780010,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 12289243,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisLineStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the axis line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle"
        }
      },
      {
        "HashCode": 752246890,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the axis line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1024163688,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisLineStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1510117949,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisLineStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1015926948,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMajorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines"
        }
      },
      {
        "HashCode": -1524930138,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2095132531,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMajorGridLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1376685009,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 84767475,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMajorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick lines in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines"
        }
      },
      {
        "HashCode": -1538737767,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick lines in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1041489166,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMajorTickLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1830689538,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 192203627,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMinorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines"
        }
      },
      {
        "HashCode": 153150377,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 833916083,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMinorGridLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1158192853,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -437341853,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMinorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines"
        }
      },
      {
        "HashCode": 516990712,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1904749375,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMinorTickLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1846340448,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1954739428,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle"
        }
      },
      {
        "HashCode": -432295532,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1737773663,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2126006821,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -421087541,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartPrimaryXAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis"
        }
      },
      {
        "HashCode": 1870781793,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 813695268,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartPrimaryXAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1309440672,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1801239991,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartPrimaryYAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis"
        }
      },
      {
        "HashCode": -1984513773,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIndexed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies indexed category  axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsIndexed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be rendered in inversed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique identifier of an axis.\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpposedPosition",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, the axis will render at the opposite side of its default position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpposedPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueType",
            "TypeName": "Syncfusion.Blazor.Charts.ValueType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of data the axis is handling.\n            Double:  Renders a numeric axis.\n            DateTime: Renders a dateTime axis.\n            Category: Renders a category axis.\n            Logarithmic: Renders a log axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis label will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Coefficient",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The polar radar radius position.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Coefficient"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the column where the axis is associated,\n            when the chart area is divided into multiple plot areas by using `Columns`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesAt",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesAt"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossesInAxis",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies axis name with which the axis line has to be crossed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossesInAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for axis and its element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DesiredIntervals",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DesiredIntervals"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EdgeLabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.EdgeLabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the position of labels at the edge of the axis.They are,\n             None: No action will be performed.\n             Hide: Edge label will be hidden.\n             Shift: Shifts the edge labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EdgeLabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbarOnZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for zooming.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbarOnZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTrim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Trim property for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTrim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntervalType",
            "TypeName": "Syncfusion.Blazor.Charts.IntervalType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\n            Auto: Defines the interval of the axis based on data.\n            Years: Defines the interval of the axis in years.\n            Months: Defines the interval of the axis in months.\n            Days: Defines the interval of the axis in days.\n            Hours: Defines the interval of the axis in hours.\n            Minutes: Defines the interval of the axis in minutes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntervalType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Interval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the interval for an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Interval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPlacement",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPlacement",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a label for category axis. They are,\n            betweenTicks: Renders the label between the ticks.\n            onTicks: Renders the label on the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomFactor",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomFactor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZoomPosition",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Position of the zoomed axis. Value ranges from 0 to 1.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZoomPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "Syncfusion.Blazor.Charts.LabelIntersectAction",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\n            when the axis labels intersect with each other.They are,\n            None: Shows all the labels.\n            Hide: Hides the label when it intersects.\n            Trim: Trim the label when it intersects.\n            Wrap: Wrap the label when it intersects.\n            MultipleRows: Shows the label in MultipleRows when it intersects.\n            Rotate45: Rotates the label to 45 degree when it intersects.\n            Rotate90: Rotates the label to 90 degree when it intersects.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the labelPadding from axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a labels to the axis line. They are,\n            inside: Renders the labels inside to the axis line.\n            outside: Renders the labels outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelRotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the axis label gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelStyle",
            "Documentation": "\n            <summary>\n            Options to customize the axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLineStyle",
            "Documentation": "\n            <summary>\n            Options for customizing axis lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogBase",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogBase"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing major grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MajorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMajorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing major tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MajorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the maximum width of an axis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabels",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The maximum number of label count per 100 pixels with respect to the axis length.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorGridLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorGridLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorGridLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLines",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMinorTickLines",
            "Documentation": "\n            <summary>\n            Options for customizing minor tick lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTicksPerInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the number of minor ticks per interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTicksPerInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlaceNextToAxisLine",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlaceNextToAxisLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left and right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetBottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Bottom padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetBottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Left padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Right padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PlotOffsetTop",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Top padding for the plot area in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PlotOffsetTop"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RangePadding",
            "TypeName": "Syncfusion.Blazor.Charts.ChartRangePadding",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the padding for the axis range in terms of interval.They are,\n            none: Padding cannot be applied to the axis.\n            normal: Padding is applied to the axis based on the range calculation.\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\n            round: Axis range is rounded to the nearest possible value divided by the interval.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RangePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisTitleStyle",
            "Documentation": "\n            <summary>\n            Options for customizing the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the skeleton format in which the dateTime format will process.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Span",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Span"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The start angle for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromZero",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            It specifies whether the axis to be start from zero.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromZero"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Syncfusion.Blazor.Charts.AxisPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the placement of a ticks to the axis line. They are,\n            inside: Renders the ticks inside to the axis line.\n            outside: Renders the ticks outside to the axis line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StripLines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>",
            "Documentation": "\n            <summary>\n            Specifies the stripLine collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StripLines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MultiLevelLabels",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>",
            "Documentation": "\n            <summary>\n            Specifies the multi level labels collection for the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MultiLevelLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollbarSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
            "Documentation": "\n            <summary>\n            Option to customize scrollbar with lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollbarSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrosshairTooltip",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrosshairTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2075142366,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartPrimaryYAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1700170941,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1365014853,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMultiLevelLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder"
        }
      },
      {
        "HashCode": -1762341925,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1839614472,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMultiLevelLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1779434462,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -855152338,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label text.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisMultiLevelLabelTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle"
        }
      },
      {
        "HashCode": -1406063055,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label text.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -859939876,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisMultiLevelLabelTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1435154003,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -284543851,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCategories",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the categories for the chart labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCategories"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategories"
        }
      },
      {
        "HashCode": -2131013390,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCategories",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the categories for the chart labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCategories"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategories",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2091331579,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCategories.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCategories"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategories.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 681374307,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCategories.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCategories"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategories.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -385541421,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCategory",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the category for the multilevel labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCategory"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "CustomAttributes",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            multi level labels custom data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            End value of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumTextWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Maximum width of the text for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumTextWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Start value of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            multi level labels text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels.\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategory"
        }
      },
      {
        "HashCode": -1812927090,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCategory",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the category for the multilevel labels.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCategory"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "CustomAttributes",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            multi level labels custom data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            End value of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumTextWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Maximum width of the text for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumTextWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Start value of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            multi level labels text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels.\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategory",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1671533579,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCategory.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCategory"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategory.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1686821497,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCategory.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCategory"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCategory.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1076230568,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMultiLevelLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the multi level labels. They are,\n            Near: Places the multi level labels at Near.\n            Center: Places the multi level labels at Center.\n            Far: Places the multi level labels at Far.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Categories",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartCategory>",
            "Documentation": "\n            <summary>\n            Multi level categories for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Categories"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Overflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the textOverFlow for multi level labels. They are,\n            Trim: Trim textOverflow for multi level labels.\n            Wrap: Wrap textOverflow for multi level labels.\n            None: None textOverflow for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Overflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel"
        }
      },
      {
        "HashCode": 743897622,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multilevel label of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the multi level labels. They are,\n            Near: Places the multi level labels at Near.\n            Center: Places the multi level labels at Center.\n            Far: Places the multi level labels at Far.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder",
            "Documentation": "\n            <summary>\n            Border of the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Categories",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartCategory>",
            "Documentation": "\n            <summary>\n            Multi level categories for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Categories"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Overflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the textOverFlow for multi level labels. They are,\n            Trim: Trim textOverflow for multi level labels.\n            Wrap: Wrap textOverflow for multi level labels.\n            None: None textOverflow for multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Overflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the multi level labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1448713981,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMultiLevelLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1187903503,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 166808000,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multi level labels of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMultiLevelLabels"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels"
        }
      },
      {
        "HashCode": -1789977707,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the multi level labels of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 821370944,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMultiLevelLabels"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2107772394,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1413789693,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Scrollbar settings of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisScrollbarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointsLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the length of the points for numeric and logarithmic values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointsLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
            "Documentation": "\n            <summary>\n            Specifies the range for date time values alone.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings"
        }
      },
      {
        "HashCode": 737381145,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Scrollbar settings of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointsLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the length of the points for numeric and logarithmic values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointsLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
            "Documentation": "\n            <summary>\n            Specifies the range for date time values alone.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 185921326,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisScrollbarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1337254080,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1280115006,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the range of scroll bar range.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisScrollbarSettingsRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange"
        }
      },
      {
        "HashCode": 736655997,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the range of scroll bar range.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -701326651,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisScrollbarSettingsRange"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 456382232,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1394063992,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the scrollbar setings of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonScrollbarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointsLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the length of the points for numeric and logarithmic values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointsLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
            "Documentation": "\n            <summary>\n            Specifies the range for date time values alone.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings"
        }
      },
      {
        "HashCode": -1856961608,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the scrollbar setings of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the scrollbar for lazy loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointsLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the length of the points for numeric and logarithmic values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointsLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange",
            "Documentation": "\n            <summary>\n            Specifies the range for date time values alone.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -372147689,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCommonScrollbarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1374008454,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2070172048,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the scrollbar range of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonScrollbarSettingsRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange"
        }
      },
      {
        "HashCode": 995004104,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the scrollbar range of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Maximum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the maximum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Maximum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Minimum",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the minimum range of an scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Minimum"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -70530867,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCommonScrollbarSettingsRange"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 287246706,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1741393054,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStripline",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the striplines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStripline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder",
            "Documentation": "\n            <summary>\n            Border of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Dash Array of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            End value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Anchor",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the strip line text horizontally. They are,\n            Start: Places the strip line text at the start.\n            Middle: Places the strip line text in the middle.\n            End: Places the strip line text at the end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsRepeat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IsRepeat value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsRepeat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSegmented",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IsSegmented value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSegmented"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Strip line Opacity.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RepeatEvery",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            repeatEvery value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RepeatEvery"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RepeatUntil",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            repeatUntil value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RepeatUntil"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the strip line text gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            segmentAxisName of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentEnd",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            segmentEnd value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentEnd"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentStart",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            segmentStart value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentStart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Size of the strip line, when it starts from the origin.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeType",
            "TypeName": "Syncfusion.Blazor.Charts.SizeType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Size type of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Start value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromAxis",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             If set true, strip line get render from axis origin.\n             @default false.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Strip line text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the strip line text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Anchor",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the strip line text vertically. They are,\n             Start: Places the strip line text at the start.\n             Middle: Places the strip line text in the middle.\n             End: Places the strip line text at the end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, strip line for axis renders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZIndex",
            "TypeName": "Syncfusion.Blazor.Charts.ZIndex",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the order of the strip line. They are,\n            Behind: Places the strip line behind the series elements.\n            Over: Places the strip line over the series elements.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStripline"
        }
      },
      {
        "HashCode": 363047282,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStripline",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the striplines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartStripline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder",
            "Documentation": "\n            <summary>\n            Border of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Dash Array of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            End value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Anchor",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the strip line text horizontally. They are,\n            Start: Places the strip line text at the start.\n            Middle: Places the strip line text in the middle.\n            End: Places the strip line text at the end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsRepeat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IsRepeat value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsRepeat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSegmented",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            IsSegmented value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsSegmented"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Strip line Opacity.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RepeatEvery",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            repeatEvery value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RepeatEvery"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RepeatUntil",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            repeatUntil value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RepeatUntil"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rotation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The angle to which the strip line text gets rotated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            segmentAxisName of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentEnd",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            segmentEnd value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentEnd"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentStart",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            segmentStart value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentStart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Size of the strip line, when it starts from the origin.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeType",
            "TypeName": "Syncfusion.Blazor.Charts.SizeType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Size type of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Start value of the strip line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartFromAxis",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n             If set true, strip line get render from axis origin.\n             @default false.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartFromAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Strip line text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the strip line text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Anchor",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the position of the strip line text vertically. They are,\n             Start: Places the strip line text at the start.\n             Middle: Places the strip line text in the middle.\n             End: Places the strip line text at the end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, strip line for axis renders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZIndex",
            "TypeName": "Syncfusion.Blazor.Charts.ZIndex",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the order of the strip line. They are,\n            Behind: Places the strip line behind the series elements.\n            Over: Places the strip line over the series elements.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStripline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 649361916,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStripline.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStripline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStripline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1583613002,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStripline.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartStripline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStripline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 430294959,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of border for the striplines.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder"
        }
      },
      {
        "HashCode": -2041249347,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of border for the striplines.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartStriplineBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2109672493,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 611710187,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartStriplineBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1552331998,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Strip lines are used to shade the different ranges in plot area in different colors to improve the readability of the chart.\n            You can annotate it with text to indicate what that particular region indicates.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplines"
        }
      },
      {
        "HashCode": -1365613464,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Strip lines are used to shade the different ranges in plot area in different colors to improve the readability of the chart.\n            You can annotate it with text to indicate what that particular region indicates.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartStriplines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 407188934,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2009697552,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartStriplines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1488081840,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of textstyle for the stripline text.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle"
        }
      },
      {
        "HashCode": -331248005,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of textstyle for the stripline text.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Unique size of the axis labels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font color for the axis title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1672230920,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1435036946,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -493799498,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEvents",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnAxisLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before each axis label is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisActualRangeCalculated",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before each axis range is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisActualRangeCalculated",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.PointRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each points for the series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TextRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the data label for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSeriesRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SeriesRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSeriesRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendItemRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LegendRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each legend item is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendItemRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisMultiLevelLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers while render multiLevelLabels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisMultiLevelLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnScrollChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ScrollEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when change the scroll.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnScrollChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZooming",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZooming",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZoomStart",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZoomStart",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZoomEnd",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZoomEnd",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LegendClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the legend item is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnCrosshairMove",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the crosshair axis value updated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnCrosshairMove",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataEditCompleted",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point drag end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataEditCompleted",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataEdit",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point drag start.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataEdit",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the selection is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnExportComplete",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnExportComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPrintComplete",
            "TypeName": "System.Action",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPrintComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after resizing of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SharedTooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SharedTooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.PointEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers on point click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMultiLevelLabelClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after click on multiLevelLabelClick.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnMultiLevelLabelClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Loaded",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LoadedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the chart rendering completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Loaded",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisLabelClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when x axis label clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisLabelClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEvents"
        }
      },
      {
        "HashCode": -137042614,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEvents",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnAxisLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before each axis label is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisActualRangeCalculated",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before each axis range is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisActualRangeCalculated",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.PointRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each points for the series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TextRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the data label for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSeriesRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SeriesRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSeriesRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendItemRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LegendRenderEventArgs>",
            "Documentation": "\n            <summary>\n             Triggers before each legend item is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendItemRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisMultiLevelLabelRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers while render multiLevelLabels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisMultiLevelLabelRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnScrollChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ScrollEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when change the scroll.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnScrollChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZooming",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZooming",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZoomStart",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZoomStart",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnZoomEnd",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the zoom selection is triggered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnZoomEnd",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLegendClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LegendClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the legend item is clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLegendClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnCrosshairMove",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the crosshair axis value updated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnCrosshairMove",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataEditCompleted",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point drag end.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataEditCompleted",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnDataEdit",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the point drag start.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnDataEdit",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the selection is completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSelectionChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnExportComplete",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnExportComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPrintComplete",
            "TypeName": "System.Action",
            "Documentation": "\n            <summary>\n            Triggers after the print completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPrintComplete",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SizeChanged",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.ResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after resizing of chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SizeChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SharedTooltipRender",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers before the tooltip for series is rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SharedTooltipRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnPointClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.PointEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers on point click.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnPointClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMultiLevelLabelClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers after click on multiLevelLabelClick.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnMultiLevelLabelClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Loaded",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.LoadedEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when the chart rendering completed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Loaded",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnAxisLabelClick",
            "TypeName": "System.Action<Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>",
            "Documentation": "\n            <summary>\n            Triggers when x axis label clicked.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnAxisLabelClick",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEvents",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1539825506,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEvents.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartEvents"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEvents.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1232900932,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEvents.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartEvents"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEvents.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -659147739,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDefaultConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the connector line style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the length of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDefaultConnector"
        }
      },
      {
        "HashCode": 988033996,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDefaultConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the connector line style.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDefaultConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the length of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDefaultConnector",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1242937507,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 440096906,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDefaultConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1343473306,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicator",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Defines the technical indicator, that are used in financial markets.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.TechnicalIndicators",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the type of the technical indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Period",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the period, the price changes over which will be considered to predict the trend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Period"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "KPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the look back period, the price changes over which will define the %K value in stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "KPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the period, the price changes over which will define the %D value in stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverBought",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverBought"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverSold",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverSold"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StandardDeviation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the standard deviation values that helps to define the upper and lower bollinger bands.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StandardDeviation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Field",
            "TypeName": "Syncfusion.Blazor.Charts.FinancialDataFields",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the field to compare the current value with previous values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Field"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlowPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the field to compare the current value with previous values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlowPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FastPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the fast period to define the Macd line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FastPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowZones",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables/Disables the over-bought and over-sold regions.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowZones"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdType",
            "TypeName": "Syncfusion.Blazor.Charts.MacdType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the type of the Macd indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdPositiveColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the color of the positive bars in Macd indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdPositiveColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdNegativeColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the color of the negative bars in Macd indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdNegativeColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BandColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Options for customizing the BollingerBand in the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BandColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of the the MacdLine of Macd indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpperLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of the upper line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpperLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LowerLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of lower line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LowerLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PeriodLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of Period Line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PeriodLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SeriesName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the name of the series, the data of which has to be depicted as indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SeriesName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation",
            "Documentation": "\n            <summary>\n            Animation settings for indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            SPecifies the fill color of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the close value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Defines the datasource for the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableComplexProperty",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the complex property data binding for the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableComplexProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "High",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the high value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "High"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Low",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the low value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Low"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the open value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visiblity of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Volume",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the volume value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Volume"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the width of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the corresponding horizontal axis in which indicator to be plotted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the xValue of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n             Defines the corresponding vertical axis in which indicator to be plotted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicator"
        }
      },
      {
        "HashCode": 1623730346,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicator",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n             Defines the technical indicator, that are used in financial markets.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.TechnicalIndicators",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the type of the technical indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Period",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the period, the price changes over which will be considered to predict the trend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Period"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "KPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the look back period, the price changes over which will define the %K value in stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "KPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the period, the price changes over which will define the %D value in stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverBought",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverBought"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverSold",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverSold"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StandardDeviation",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the standard deviation values that helps to define the upper and lower bollinger bands.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StandardDeviation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Field",
            "TypeName": "Syncfusion.Blazor.Charts.FinancialDataFields",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the field to compare the current value with previous values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Field"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlowPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the field to compare the current value with previous values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlowPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FastPeriod",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets the fast period to define the Macd line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FastPeriod"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowZones",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables/Disables the over-bought and over-sold regions.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowZones"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdType",
            "TypeName": "Syncfusion.Blazor.Charts.MacdType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the type of the Macd indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdPositiveColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the color of the positive bars in Macd indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdPositiveColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdNegativeColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the color of the negative bars in Macd indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdNegativeColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BandColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Options for customizing the BollingerBand in the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BandColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MacdLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of the the MacdLine of Macd indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MacdLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpperLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of the upper line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpperLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LowerLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of lower line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LowerLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PeriodLine",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine",
            "Documentation": "\n            <summary>\n            Defines the appearance of Period Line in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PeriodLine"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SeriesName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the name of the series, the data of which has to be depicted as indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SeriesName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation",
            "Documentation": "\n            <summary>\n            Animation settings for indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            SPecifies the fill color of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the close value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Defines the datasource for the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableComplexProperty",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the complex property data binding for the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableComplexProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "High",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the high value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "High"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Low",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the low value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Low"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the open value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visiblity of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Volume",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the volume value of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Volume"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the width of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the corresponding horizontal axis in which indicator to be plotted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the xValue of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n             Defines the corresponding vertical axis in which indicator to be plotted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -596091849,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicator.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicator.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -151578770,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicator.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicator.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 681859509,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to configure the Animation  for indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation"
        }
      },
      {
        "HashCode": -1145574907,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to configure the Animation  for indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1519476617,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 274600768,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1696123293,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Lower line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorLowerLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the lower line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the lower line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine"
        }
      },
      {
        "HashCode": 1931955855,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Lower line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the lower line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the lower line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1553784726,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorLowerLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1825600876,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -593917319,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Macd line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorMacdLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the Macd line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the Macd line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine"
        }
      },
      {
        "HashCode": -373759591,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Macd line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the Macd line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the Macd line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1185682794,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorMacdLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1629198842,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 560413485,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Lower line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorPeriodLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the period line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the period line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine"
        }
      },
      {
        "HashCode": 566281637,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the Lower line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defins the width of the period line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defins the color of the period line of the indicator.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -461301719,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorPeriodLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 584793275,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -844609437,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicators",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of technical indicators, that are used in financial markets.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicators"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicators"
        }
      },
      {
        "HashCode": -1091778681,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicators",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of technical indicators, that are used in financial markets.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicators"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicators",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2100685700,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicators.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicators"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicators.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 706111883,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicators.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicators"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicators.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -945838646,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the upper line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorUpperLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width the upper line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the upper line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine"
        }
      },
      {
        "HashCode": -1937647793,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the upper line of the indicator.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width the upper line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the upper line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1893924221,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorUpperLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 875607757,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1572702051,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLegendBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder"
        }
      },
      {
        "HashCode": 891784894,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartLegendBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1178774745,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLegendBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2026470657,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartLegendBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -990310616,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLegendMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin"
        }
      },
      {
        "HashCode": -521084319,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartLegendMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -778781748,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLegendMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1254256973,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartLegendMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 853888587,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLegendTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle"
        }
      },
      {
        "HashCode": 1406511156,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 679968607,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLegendTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1220621394,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartLegendTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 328327621,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLocation"
        }
      },
      {
        "HashCode": 1577223972,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLocation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1465699320,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -45510032,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -69467127,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLegendSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the visibility of legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the width for legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the height for legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Location",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLocation",
            "Documentation": "\n            <summary>\n            Specifies the location of the legend, relative to the chart.\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `position` to be `Custom`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Location"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Position of the legend in the chart are,\n             Auto: Places the legend based on area type.\n             Top: Displays the legend at the top of the chart.\n             Left: Displays the legend at the left of the chart.\n             Bottom: Displays the legend at the bottom of the chart.\n             Right: Displays the legend at the right of the chart.\n             Custom: Displays the legend  based on the given x and y values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Option to customize the padding between legend items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Legend in chart can be aligned as follows:\n             Near: Aligns the legend to the left of the chart.\n             Center: Aligns the legend to the center of the chart.\n             Far: Aligns the legend to the right of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the legend text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape width of the legend shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeHeight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape height of the legend shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin",
            "Documentation": "\n            <summary>\n            Options to customize left, right, top and bottom margins of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapePadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Padding between the legend shape and text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background of the chart legend area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Options to customize left, right, top and bottom margins of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleVisibility",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series' visibility collapses based on the legend visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleVisibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for legends.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to inverse legend item content (image and text).\n            </summary>\n            <value> \n            true if the legend should be inversed; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reverse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to reverse the legend items order.\n            </summary>\n            <value> \n            true if the legend should be reverse; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reverse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.LabelOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \n             <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextWrap",
            "TypeName": "Syncfusion.Blazor.TextWrap",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> \n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \n            </summary> \n            <value> \n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendSettings"
        }
      },
      {
        "HashCode": 890889801,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartLegendSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the visibility of legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the width for legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the height for legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Location",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLocation",
            "Documentation": "\n            <summary>\n            Specifies the location of the legend, relative to the chart.\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `position` to be `Custom`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Location"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Position of the legend in the chart are,\n             Auto: Places the legend based on area type.\n             Top: Displays the legend at the top of the chart.\n             Left: Displays the legend at the left of the chart.\n             Bottom: Displays the legend at the bottom of the chart.\n             Right: Displays the legend at the right of the chart.\n             Custom: Displays the legend  based on the given x and y values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Option to customize the padding between legend items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Legend in chart can be aligned as follows:\n             Near: Aligns the legend to the left of the chart.\n             Center: Aligns the legend to the center of the chart.\n             Far: Aligns the legend to the right of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the legend text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape width of the legend shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeHeight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Shape height of the legend shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapeHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.ChartLegendMargin",
            "Documentation": "\n            <summary>\n            Options to customize left, right, top and bottom margins of the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapePadding",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Padding between the legend shape and text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShapePadding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The background of the chart legend area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Options to customize left, right, top and bottom margins of the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToggleVisibility",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, series' visibility collapses based on the legend visibility.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToggleVisibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Description for legends.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            TabIndex value for the legend.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsInversed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to inverse legend item content (image and text).\n            </summary>\n            <value> \n            true if the legend should be inversed; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsInversed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reverse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether to reverse the legend items order.\n            </summary>\n            <value> \n            true if the legend should be reverse; otherwise, false. \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reverse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.LabelOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \n             <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextWrap",
            "TypeName": "Syncfusion.Blazor.TextWrap",
            "IsEnum": true,
            "Documentation": "\n            <summary> \n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \n            </summary> \n            <value> \n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \n            </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumLabelWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> \n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \n            </summary> \n            <value> \n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumLabelWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1621286783,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLegendSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 544782722,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartLegendSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1289640892,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SfChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the chart as a string accepts input both as '100px' or '100%'.\n            If specified as '100%, chart renders to the full height of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the chart as a string accepts input as both like '100px' or '100%'.\n            If specified as '100%, chart renders to the full width of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the title of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SubTitle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the sub title of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SubTitle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines id of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsTransposed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets and sets whether the chart should be render in transposed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsTransposed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "Syncfusion.Blazor.Theme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the theme for the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Palettes",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            Gets and sets the palette for the chart series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Palettes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the background color of the chart that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\n            </summary>\n            <value> \n            true if the chart should be in rtl direction; otherwise, false.\n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSideBySidePlacement",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the side by side placement.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSideBySidePlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnBothAxis",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets and sets both axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnBothAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the background image for chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the highlight color for the data point when user hover the data point. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the selection mode of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightMode",
            "TypeName": "Syncfusion.Blazor.Charts.HighlightMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the highlight mode of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the selection pattern of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the highlight pattern of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsMultiSelect",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the multi select of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsMultiSelect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable to allow the multi select of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowMultiSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseGroupingSeparator",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the group separator for yaxis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UseGroupingSeparator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the access text for chart title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets and sets the tabIndex for chart title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the animation for chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the custom class for the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsStockChart",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "IsStockChart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StockEventsRender",
            "TypeName": "System.Action<Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "StockEventsRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetTooltipTop",
            "TypeName": "System.Func<System.Double>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "GetTooltipTop",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfChart"
        }
      },
      {
        "HashCode": 308260053,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SfChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.SfChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The height of the chart as a string accepts input both as '100px' or '100%'.\n            If specified as '100%, chart renders to the full height of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The width of the chart as a string accepts input as both like '100px' or '100%'.\n            If specified as '100%, chart renders to the full width of its parent element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the title of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SubTitle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the sub title of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SubTitle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines id of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsTransposed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets and sets whether the chart should be render in transposed manner or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsTransposed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "Syncfusion.Blazor.Theme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the theme for the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Theme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Palettes",
            "TypeName": "System.String[]",
            "Documentation": "\n            <summary>\n            Gets and sets the palette for the chart series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Palettes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Background",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the background color of the chart that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Background"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRtl",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\n            </summary>\n            <value> \n            true if the chart should be in rtl direction; otherwise, false.\n            </value> \n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRtl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSideBySidePlacement",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the side by side placement.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSideBySidePlacement"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAutoIntervalOnBothAxis",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets and sets both axis interval will be calculated automatically with respect to the zoomed range.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAutoIntervalOnBothAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackgroundImage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the background image for chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackgroundImage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the highlight color for the data point when user hover the data point. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the selection mode of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightMode",
            "TypeName": "Syncfusion.Blazor.Charts.HighlightMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the highlight mode of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the selection pattern of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightPattern",
            "TypeName": "Syncfusion.Blazor.Charts.SelectionPattern",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets and sets the highlight pattern of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsMultiSelect",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the multi select of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsMultiSelect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiSelection",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable to allow the multi select of the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowMultiSelection"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UseGroupingSeparator",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the group separator for yaxis label.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UseGroupingSeparator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Description",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the access text for chart title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Description"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets and sets the tabIndex for chart title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option for enable the animation for chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets and sets the custom class for the chart.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CustomClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsStockChart",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "IsStockChart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StockEventsRender",
            "TypeName": "System.Action<Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "StockEventsRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GetTooltipTop",
            "TypeName": "System.Func<System.Double>",
            "Documentation": "\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "GetTooltipTop",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfChart",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1826014942,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.SfChart.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1024921277,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.SfChart.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.SfChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 617998109,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCornerRadius",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the corner radius for the reactangle type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCornerRadius"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "BottomLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom left value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BottomLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BottomRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom right value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BottomRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TopLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top left value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TopLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TopRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top right value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TopRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius"
        }
      },
      {
        "HashCode": -1984693624,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCornerRadius",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the corner radius for the reactangle type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCornerRadius"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "BottomLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom left value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BottomLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BottomRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom right value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BottomRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TopLeft",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top left value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TopLeft"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TopRight",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top right value of the corner radius.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TopRight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -670276637,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCornerRadius"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1313679195,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCornerRadius"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -267252432,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeries",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of series\n            The type of the series are\n            Line\n            Column\n            Area\n            Bar\n            Histogram\n            StackingColumn\n            StackingArea\n            StackingBar\n            StepLine\n            StepArea\n            Scatter\n            Spline\n            StackingColumn100\n            StackingBar100\n            StackingArea100\n            RangeColumn\n            Hilo\n            HiloOpenClose\n            Waterfall\n            RangeArea\n            Bubble\n            Candle\n            Polar\n            Radar\n            BoxAndWhisker\n            Pareto.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the visibility of series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width for the series that is applicable only for `Line` type series.\n            It also represent the stroke width of the signal lines in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the horizontal axis associated with the series. It requires `Axes` of the chart.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the x value.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the vertical axis associated with the series. It requires `Axes` of the chart.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "High",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the high value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "High"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Low",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the low value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Low"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the name that specifies the chart series are mutually exclusive and can be overlaid.\n            The axis in the same group shares the same baseline and location on the corresponding axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the open value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the close value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Volume",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the volume value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Volume"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the z order of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\n            It also represents the color of the signal lines in technical indicators.\n            For technical indicators, the default value is 'blue' and for series, it has null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawType",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDrawType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Type of series to be drawn in radar or polar series. They are\n            'Line'\n            'Column'\n            'Area'\n            'Scatter'\n            'Spline'\n            'StackingColumn'\n            'StackingArea'\n            'RangeColumn'\n            'SplineArea'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DrawType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableComplexProperty",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This property used to improve chart performance via data mapping for series dataSource.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableComplexProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, the Tooltip for series will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the format of the tooltip for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointColorMapping",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the color value of point\n            It is applicable for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointColorMapping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the size value for the bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the opacity of the series fill.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder",
            "Documentation": "\n            <summary>\n            Defines the border of the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the legend shape of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Marker",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarker",
            "Documentation": "\n            <summary>\n            Specifies the customization of the marker of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Marker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyPointSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings",
            "Documentation": "\n            <summary>\n            Specifies the customization of the empty point settins for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyPointSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnSpacing",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the space between adjacent series for the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnSpacing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CornerRadius",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius",
            "Documentation": "\n            <summary>\n            Specifies the corner radius of the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CornerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the column width of the rectangle typed series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StackingGroup",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Based on this value stacking series are grouped together.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StackingGroup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentAxis",
            "TypeName": "Syncfusion.Blazor.Charts.Segment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies in which axis segment will be done.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the polar line based series to be closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CardinalSplineTension",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the CardinalSplineTension for spline series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CardinalSplineTension"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SplineType",
            "TypeName": "Syncfusion.Blazor.Charts.SplineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the splineType for spline series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SplineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSolidCandles",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables SolidCandles for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSolidCandles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BearFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies BearFillColor for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BearFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BullFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the BullFillColor for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BullFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxRadius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denoted the maximum radius for bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinRadius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denoted the minimum radius for bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Connector",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector",
            "Metadata": {
              "Common.PropertyName": "Connector"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipMappingName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the intermediateSumIndexes for waterfall series\n            The provided value will be considered as a Tooltip Mapping name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipMappingName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntermediateSumIndexes",
            "TypeName": "System.Double[]",
            "Documentation": "\n            <summary>\n            IntermediateSumIndexes for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntermediateSumIndexes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SumIndexes",
            "TypeName": "System.Double[]",
            "Documentation": "\n            <summary>\n            Specifies the sumIndexes for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SumIndexes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the summaryFillColor for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NegativeFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the NegativeFillColor for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NegativeFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowNormalDistribution",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the ShowNormalDistribution for Histogram series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowNormalDistribution"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BinInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the BinInterval for Histogram series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BinInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BoxPlotMode",
            "TypeName": "Syncfusion.Blazor.Charts.BoxPlotMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the  BoxPlotMode for box and whisker series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BoxPlotMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMean",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Showmean for box and whisker series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowMean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Trendlines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartTrendline>",
            "Documentation": "\n            <summary>\n            Specifies the trendlines for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Trendlines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Segments",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartSegment>",
            "Documentation": "\n            <summary>\n            Specified the segments of the multicolor series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Segments"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation",
            "Documentation": "\n            <summary>\n            Specifies the configuration of the  animation settings for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorBar",
            "TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings",
            "Metadata": {
              "Common.PropertyName": "ErrorBar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Spectifies class name when the series is selected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UnSelectedStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Spectifies class name when the series is deselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UnSelectedStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NonHighlightStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specfies the class name when the series is  non-highlighted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NonHighlightStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specfies the class name when the series is  highlighted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChartDataEditSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings",
            "Documentation": "\n            <summary>\n            Configuration of drag settings for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChartDataEditSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeries"
        }
      },
      {
        "HashCode": 198650372,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeries",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of series\n            The type of the series are\n            Line\n            Column\n            Area\n            Bar\n            Histogram\n            StackingColumn\n            StackingArea\n            StackingBar\n            StepLine\n            StepArea\n            Scatter\n            Spline\n            StackingColumn100\n            StackingBar100\n            StackingArea100\n            RangeColumn\n            Hilo\n            HiloOpenClose\n            Waterfall\n            RangeArea\n            Bubble\n            Candle\n            Polar\n            Radar\n            BoxAndWhisker\n            Pareto.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the visibility of series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width for the series that is applicable only for `Line` type series.\n            It also represent the stroke width of the signal lines in technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the horizontal axis associated with the series. It requires `Axes` of the chart.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "XName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the x value.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "XName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YAxisName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the vertical axis associated with the series. It requires `Axes` of the chart.\n            It is applicable for series and technical indicators.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YAxisName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the y value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "YName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "High",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the high value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "High"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Low",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the low value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Low"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the name that specifies the chart series are mutually exclusive and can be overlaid.\n            The axis in the same group shares the same baseline and location on the corresponding axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the open value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the close value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Volume",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the volume value for financial type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Volume"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ZOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the z order of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ZOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\n            It also represents the color of the signal lines in technical indicators.\n            For technical indicators, the default value is 'blue' and for series, it has null.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataSource",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataSource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "Syncfusion.Blazor.Data.Query",
            "Documentation": "\n            <summary>\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DrawType",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDrawType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Type of series to be drawn in radar or polar series. They are\n            'Line'\n            'Column'\n            'Area'\n            'Scatter'\n            'Spline'\n            'StackingColumn'\n            'StackingArea'\n            'RangeColumn'\n            'SplineArea'.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DrawType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableComplexProperty",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            This property used to improve chart performance via data mapping for series dataSource.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableComplexProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, the Tooltip for series will be visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the format of the tooltip for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PointColorMapping",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the color value of point\n            It is applicable for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PointColorMapping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The DataSource field that contains the size value for the bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the opacity of the series fill.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder",
            "Documentation": "\n            <summary>\n            Defines the border of the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the legend shape of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Marker",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarker",
            "Documentation": "\n            <summary>\n            Specifies the customization of the marker of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Marker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyPointSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings",
            "Documentation": "\n            <summary>\n            Specifies the customization of the empty point settins for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyPointSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnSpacing",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the space between adjacent series for the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnSpacing"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CornerRadius",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCornerRadius",
            "Documentation": "\n            <summary>\n            Specifies the corner radius of the rectangle shaped series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CornerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the column width of the rectangle typed series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StackingGroup",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Based on this value stacking series are grouped together.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StackingGroup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SegmentAxis",
            "TypeName": "Syncfusion.Blazor.Charts.Segment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies in which axis segment will be done.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SegmentAxis"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsClosed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the polar line based series to be closed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsClosed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CardinalSplineTension",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the CardinalSplineTension for spline series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CardinalSplineTension"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SplineType",
            "TypeName": "Syncfusion.Blazor.Charts.SplineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the splineType for spline series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SplineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSolidCandles",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables SolidCandles for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSolidCandles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BearFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies BearFillColor for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BearFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BullFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the BullFillColor for candle series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BullFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxRadius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denoted the maximum radius for bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinRadius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denoted the minimum radius for bubble series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Connector",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector",
            "Metadata": {
              "Common.PropertyName": "Connector"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipMappingName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the intermediateSumIndexes for waterfall series\n            The provided value will be considered as a Tooltip Mapping name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipMappingName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IntermediateSumIndexes",
            "TypeName": "System.Double[]",
            "Documentation": "\n            <summary>\n            IntermediateSumIndexes for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IntermediateSumIndexes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SumIndexes",
            "TypeName": "System.Double[]",
            "Documentation": "\n            <summary>\n            Specifies the sumIndexes for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SumIndexes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the summaryFillColor for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NegativeFillColor",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the NegativeFillColor for waterfall series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NegativeFillColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowNormalDistribution",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the ShowNormalDistribution for Histogram series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowNormalDistribution"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BinInterval",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the BinInterval for Histogram series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BinInterval"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BoxPlotMode",
            "TypeName": "Syncfusion.Blazor.Charts.BoxPlotMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the  BoxPlotMode for box and whisker series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BoxPlotMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMean",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the Showmean for box and whisker series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowMean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Trendlines",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartTrendline>",
            "Documentation": "\n            <summary>\n            Specifies the trendlines for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Trendlines"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Segments",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartSegment>",
            "Documentation": "\n            <summary>\n            Specified the segments of the multicolor series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Segments"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation",
            "Documentation": "\n            <summary>\n            Specifies the configuration of the  animation settings for series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorBar",
            "TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings",
            "Metadata": {
              "Common.PropertyName": "ErrorBar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Spectifies class name when the series is selected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UnSelectedStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Spectifies class name when the series is deselected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UnSelectedStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NonHighlightStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specfies the class name when the series is  non-highlighted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NonHighlightStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HighlightStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specfies the class name when the series is  highlighted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HighlightStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChartDataEditSettings",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings",
            "Documentation": "\n            <summary>\n            Configuration of drag settings for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChartDataEditSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeries",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1346264742,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeries.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeries.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1229333707,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeries.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeries.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -391452107,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeriesCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesCollection"
        }
      },
      {
        "HashCode": -400853571,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSeriesCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesCollection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1571230017,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeriesCollection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -912706243,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSeriesCollection"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -744607106,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the series animation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeriesAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation"
        }
      },
      {
        "HashCode": -1935785235,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the series animation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1614568536,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeriesAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -310844580,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSeriesAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1189253092,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the border of the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeriesBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder"
        }
      },
      {
        "HashCode": -1334059721,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the border of the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSeriesBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 722498263,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeriesBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 837122041,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSeriesBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1890356785,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the series animation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeriesConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the length of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector"
        }
      },
      {
        "HashCode": 1415244602,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesConnector",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the series animation.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSeriesConnector"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ConnectorType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the length of the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for the connector line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1758481881,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeriesConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 54366610,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSeriesConnector"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -531336641,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visiblity of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the datalabel mapping name for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the opacity of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Angle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the angle at which label rotation takes place.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Angle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRotation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable the rotation of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the label position of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Width of rounded corner in horizontal orientation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Width of rounded corner in vertical orientation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the alignment for the datalabels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin",
            "Documentation": "\n            <summary>\n            Options to customize the margin for the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Font",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont",
            "Documentation": "\n            <summary>\n            Options to customize the text style of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Font"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.ChartDataPointInfo>",
            "Documentation": "\n            <summary>\n            Specifies the custom HTML element in place of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the label intersect action for the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel"
        }
      },
      {
        "HashCode": -1532261145,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visiblity of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the datalabel mapping name for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Defines the opacity of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Angle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the angle at which label rotation takes place.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Angle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableRotation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enable the rotation of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableRotation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Syncfusion.Blazor.Charts.LabelPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the label position of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Width of rounded corner in horizontal orientation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Width of rounded corner in vertical orientation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Alignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the alignment for the datalabels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Alignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder",
            "Documentation": "\n            <summary>\n            Options to customize the border of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin",
            "Documentation": "\n            <summary>\n            Options to customize the margin for the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Font",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont",
            "Documentation": "\n            <summary>\n            Options to customize the text style of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Font"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.ChartDataPointInfo>",
            "Documentation": "\n            <summary>\n            Specifies the custom HTML element in place of datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LabelIntersectAction",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the label intersect action for the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LabelIntersectAction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -909742494,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the custom HTML element in place of datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "ChartDataLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1350124672,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the custom HTML element in place of datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 809595453,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 598584664,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1577590588,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the datalabel border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the datalabel border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder"
        }
      },
      {
        "HashCode": -1288350335,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the datalabel border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the datalabel border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 505216949,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1057809793,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataLabelBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2094941053,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataLabelFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the size of the datalabel text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defind the color of the datalabel text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont"
        }
      },
      {
        "HashCode": -1213444179,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataLabelFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defines the size of the datalabel text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Defind the color of the datalabel text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1961792187,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataLabelFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -69014495,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataLabelFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1083165996,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the margin of the datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataLabelMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the bottom margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the left margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the right margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the top margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin"
        }
      },
      {
        "HashCode": 1239306091,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the margin of the datalabel.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the bottom margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the left margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the right margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the top margin of the datalabel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 625710805,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataLabelMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1338665008,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataLabelMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2071223818,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartEmptyPointBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the border color of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder"
        }
      },
      {
        "HashCode": -970044772,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the border color of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 257366286,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartEmptyPointBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -98026997,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 374584072,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the Empty Point configuration of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartEmptyPointSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.EmptyPointMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the mode of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the fill of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder",
            "Documentation": "\n            <summary>\n            Sets and gets the border of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings"
        }
      },
      {
        "HashCode": -2019022266,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the Empty Point configuration of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.EmptyPointMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the mode of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the fill of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointBorder",
            "Documentation": "\n            <summary>\n            Sets and gets the border of the empty point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1950827048,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartEmptyPointSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 97285379,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 597456932,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the error bar cap settings.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartErrorBarCapSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n             The stroke color of the cap, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The length of the error bar in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity of the cap.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the error bar in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings"
        }
      },
      {
        "HashCode": 1788232334,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the error bar cap settings.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n             The stroke color of the cap, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The length of the error bar in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The opacity of the cap.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the error bar in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1666896735,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartErrorBarCapSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -682298291,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1271005093,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the error bar settings.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartErrorBarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color for stroke of the error bar, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarDirection",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The direction of the error bar . They are\n            both - Renders both direction of error bar.\n            minus - Renders minus direction of error bar.\n            plus - Renders plus direction error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorBarCap",
            "TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings",
            "Documentation": "\n            <summary>\n            Options for customizing the cap of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorBarCap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalNegativeError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal negative error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalNegativeError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalPositiveError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal positive error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalPositiveError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The mode of the error bar . They are\n            Vertical - Renders a vertical error bar.\n            Horizontal - Renders a horizontal error bar.\n            Both - Renders both side error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The type of the error bar . They are\n            Fixed - Renders a fixed type error bar.\n            Percentage - Renders a percentage type error bar.\n            StandardDeviation - Renders a standard deviation type error bar.\n            StandardError -Renders a standard error type error bar.\n            Custom -Renders a custom type error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalNegativeError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical negative error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalNegativeError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalPositiveError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical positive error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalPositiveError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, error bar for data gets rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the error bar..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings"
        }
      },
      {
        "HashCode": -995728105,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the error bar settings.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color for stroke of the error bar, which accepts value in hex, rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarDirection",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The direction of the error bar . They are\n            both - Renders both direction of error bar.\n            minus - Renders minus direction of error bar.\n            plus - Renders plus direction error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorBarCap",
            "TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarCapSettings",
            "Documentation": "\n            <summary>\n            Options for customizing the cap of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorBarCap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalNegativeError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal negative error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalNegativeError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalPositiveError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the horizontal positive error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalPositiveError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The mode of the error bar . They are\n            Vertical - Renders a vertical error bar.\n            Horizontal - Renders a horizontal error bar.\n            Both - Renders both side error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.ErrorBarType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The type of the error bar . They are\n            Fixed - Renders a fixed type error bar.\n            Percentage - Renders a percentage type error bar.\n            StandardDeviation - Renders a standard deviation type error bar.\n            StandardError -Renders a standard error type error bar.\n            Custom -Renders a custom type error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalNegativeError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical negative error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalNegativeError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalPositiveError",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Denotes the vertical positive error of the error bar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VerticalPositiveError"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set true, error bar for data gets rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the error bar..\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -416348939,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartErrorBarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2074925924,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartErrorBarSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -967599282,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the marker configuration of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonMarker"
        }
      },
      {
        "HashCode": -859462748,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the marker configuration of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCommonMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonMarker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2086531336,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCommonMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 555768058,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCommonMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 507190432,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarker"
        }
      },
      {
        "HashCode": 395246228,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -669449518,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -743681068,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1782700879,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMarkerBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder"
        }
      },
      {
        "HashCode": -2050723067,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMarkerBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker border.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 418141566,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMarkerBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2032385586,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMarkerBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 890114151,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartMarkerOffset"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset"
        }
      },
      {
        "HashCode": 1656490009,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartMarkerOffset"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1246751267,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartMarkerOffset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -770523395,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartMarkerOffset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -186916496,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSegment",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of regions that helps to differentiate a line Type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSegment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Sets and gets the value of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegment"
        }
      },
      {
        "HashCode": 2055090529,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSegment",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of regions that helps to differentiate a line Type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSegment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Sets and gets the value of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegment",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1741859970,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSegment.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSegment"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegment.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -766488202,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSegment.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSegment"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegment.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1671639293,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSegments",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of regions that helps to differentiate a line Type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSegments"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegments"
        }
      },
      {
        "HashCode": -18830075,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSegments",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of regions that helps to differentiate a line Type series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSegments"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegments",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1336114512,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSegments.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSegments"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegments.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1783459642,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSegments.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSegments"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSegments.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 11170226,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendline",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of trendlines that are used to predict the trend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTrendline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the value of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.TrendlineTypes",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Period",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Period"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PolynomialOrder",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PolynomialOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackwardForecast",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackwardForecast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForwardForecast",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForwardForecast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Intercept",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Intercept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Marker",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Marker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendline"
        }
      },
      {
        "HashCode": 1002369071,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendline",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of trendlines that are used to predict the trend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTrendline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the value of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.TrendlineTypes",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Period",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Period"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PolynomialOrder",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PolynomialOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BackwardForecast",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BackwardForecast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ForwardForecast",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ForwardForecast"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTooltip",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTooltip"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Intercept",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Intercept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendShape",
            "TypeName": "Syncfusion.Blazor.Charts.LegendShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendShape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Marker",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Marker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Animation",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation",
            "Documentation": "\n            <summary>\n            Sets and gets the dash array of the segment series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Animation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 779376571,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendline.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTrendline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1110297464,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendline.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTrendline"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendline.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2088284867,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of animation for the trendlines.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTrendlineAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation"
        }
      },
      {
        "HashCode": 1100613119,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of animation for the trendlines.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 974670773,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTrendlineAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1377337014,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1518118338,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the marker in trendline.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTrendlineMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker"
        }
      },
      {
        "HashCode": -38169884,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineMarker",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Specifies the configuration of the marker in trendline.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables the visibility of marker for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shape",
            "TypeName": "Syncfusion.Blazor.Charts.ChartShape",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Defines the shape of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shape"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the url path for the image.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the height of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerBorder",
            "Documentation": "\n            <summary>\n            Oprions to customize the border of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offset",
            "TypeName": "Syncfusion.Blazor.Charts.ChartMarkerOffset",
            "Documentation": "\n            <summary>\n            Options to customize the offset of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill color of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the opacity of the marker shape.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataLabel",
            "TypeName": "Syncfusion.Blazor.Charts.ChartDataLabel",
            "Documentation": "\n            <summary>\n            Options to customize the datalabel for the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataLabel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -553133449,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTrendlineMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1922346085,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTrendlineMarker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1781398598,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of trendlines that are used to predict the trend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTrendlines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlines"
        }
      },
      {
        "HashCode": 1613406079,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Defines the collection of trendlines that are used to predict the trend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTrendlines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -382121091,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTrendlines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1985363037,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTrendlines"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 320993298,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataBoundComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataBoundComponent"
        }
      },
      {
        "HashCode": -1324079982,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataBoundComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataBoundComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1545055658,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataBoundComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -976907325,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataBoundComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 958664934,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataEditSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the drag settings for series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataEditSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To enable the drag the points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            To set the color of the edited point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            To set the maximum y of the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            To set the minimum y of the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings"
        }
      },
      {
        "HashCode": 1172947383,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartDataEditSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the drag settings for series.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartDataEditSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To enable the drag the points.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            To set the color of the edited point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            To set the maximum y of the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            To set the minimum y of the point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2016697203,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataEditSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1580451388,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartDataEditSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -930949373,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartZoomSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the zoom settings of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartZoomSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "EnableDeferredZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             If set to true, zooming will be performed on mouse up. It requires `EnableSelectionZooming` to be true.\n            \n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableDeferredZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMouseWheelZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, chart can be zoomed by using mouse wheel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMouseWheelZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePan",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether chart needs to be panned by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePan"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePinchZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If to true, chart can be pinched to zoom in / zoom out.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePinchZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbar",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis needs to have scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSelectionZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, chart can be zoomed by a rectangular selecting region on the plot area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSelectionZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.ZoomMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether to allow zooming vertically or horizontally or in both ways. They are,\n            x,y: Chart can be zoomed both vertically and horizontally.\n            x: Chart can be zoomed horizontally.\n            y: Chart can be zoomed  vertically.\n            It requires `EnableSelectionZooming` to be true.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToolbarItems",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ToolbarItems>",
            "Documentation": "\n            <summary>\n            Specifies the toolkit options for the zooming as follows:\n            Zoom\n            ZoomIn\n            ZoomOut\n            Pan\n            Reset.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToolbarItems"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartZoomSettings"
        }
      },
      {
        "HashCode": 820378209,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartZoomSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the zoom settings of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartZoomSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "EnableDeferredZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n             <summary>\n             If set to true, zooming will be performed on mouse up. It requires `EnableSelectionZooming` to be true.\n            \n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableDeferredZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMouseWheelZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, chart can be zoomed by using mouse wheel.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMouseWheelZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePan",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether chart needs to be panned by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePan"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnablePinchZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If to true, chart can be pinched to zoom in / zoom out.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnablePinchZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableScrollbar",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether axis needs to have scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableScrollbar"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableSelectionZooming",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, chart can be zoomed by a rectangular selecting region on the plot area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableSelectionZooming"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Syncfusion.Blazor.Charts.ZoomMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies whether to allow zooming vertically or horizontally or in both ways. They are,\n            x,y: Chart can be zoomed both vertically and horizontally.\n            x: Chart can be zoomed horizontally.\n            y: Chart can be zoomed  vertically.\n            It requires `EnableSelectionZooming` to be true.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToolbarItems",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.ToolbarItems>",
            "Documentation": "\n            <summary>\n            Specifies the toolkit options for the zooming as follows:\n            Zoom\n            ZoomIn\n            ZoomOut\n            Pan\n            Reset.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ToolbarItems"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartZoomSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -71499482,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartZoomSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1650065228,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartZoomSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -544423730,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the axis's crosshair tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisCrosshairTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, crosshair ToolTip will be visible.\n            @default false.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the ToolTip accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip"
        }
      },
      {
        "HashCode": -596545569,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the axis's crosshair tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, crosshair ToolTip will be visible.\n            @default false.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the ToolTip accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1264809464,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisCrosshairTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2134753401,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -450368218,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the crosshair line of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCrosshairLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine"
        }
      },
      {
        "HashCode": -606483782,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairLine",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the crosshair line of the chart.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCrosshairLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -873716959,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCrosshairLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1177353456,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCrosshairLine"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 22699087,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the crosshair for the charts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCrosshairSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for crosshair.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, crosshair line becomes visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Line",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Line"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Syncfusion.Blazor.Charts.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type. Horizontal mode enables the horizontal line and Vertical mode enables the vertical line. They are,\n            None: Hides both vertical and horizontal crosshair lines.\n            Both: Shows both vertical and horizontal crosshair lines.\n            Vertical: Shows the vertical line.\n            Horizontal: Shows the horizontal line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairSettings"
        }
      },
      {
        "HashCode": 648371301,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the crosshair for the charts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCrosshairSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the dashArray for crosshair.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, crosshair line becomes visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Line",
            "TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairLine",
            "Documentation": "\n            <summary>\n            Options to customize the crosshair line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Line"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Syncfusion.Blazor.Charts.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type. Horizontal mode enables the horizontal line and Vertical mode enables the vertical line. They are,\n            None: Hides both vertical and horizontal crosshair lines.\n            Both: Shows both vertical and horizontal crosshair lines.\n            Vertical: Shows the vertical line.\n            Horizontal: Shows the horizontal line.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -21675481,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCrosshairSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1561238451,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCrosshairSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1029944462,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to cusomize the tooltip text style of the crosshair tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCrosshairTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle"
        }
      },
      {
        "HashCode": 902032709,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to cusomize the tooltip text style of the crosshair tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Font size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -777572131,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartCrosshairTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1696233507,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 608398165,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSelectedDataIndex"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex"
        }
      },
      {
        "HashCode": -1564539807,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1779412726,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSelectedDataIndex"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -718242183,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1960225686,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSelectedDataIndexes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes"
        }
      },
      {
        "HashCode": 2041342171,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            SelectedData in the chart appears inimitable from the rest of the data points.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1082637693,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSelectedDataIndexes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2059469444,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1488253168,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the border of the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTooltipBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder"
        }
      },
      {
        "HashCode": -1750084083,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the border of the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTooltipBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1902090335,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTooltipBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1633550557,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTooltipBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 428970074,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder",
            "Documentation": "\n            <summary>\n            Options to customize tooltip borders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Duration for the ToolTip animation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, ToolTip will animate while moving from one point to another.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMarker",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMarker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTextWrap",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To wrap the tooltip long text based on available space.\n            This is only application for chart tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FadeOutDuration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Fade Out duration for the ToolTip hide.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FadeOutDuration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Format the ToolTip content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Header for tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shared",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, a single ToolTip will be displayed for every index.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shared"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings"
        }
      },
      {
        "HashCode": 1246107529,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Border",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTooltipBorder",
            "Documentation": "\n            <summary>\n            Options to customize tooltip borders.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Border"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Duration for the ToolTip animation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableAnimation",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, ToolTip will animate while moving from one point to another.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableAnimation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableMarker",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables / Disables the visibility of the marker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableMarker"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableTextWrap",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            To wrap the tooltip long text based on available space.\n            This is only application for chart tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableTextWrap"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FadeOutDuration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Fade Out duration for the ToolTip hide.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FadeOutDuration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Format the ToolTip content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Header for tooltip.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Header"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shared",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If set to true, a single ToolTip will be displayed for every index.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shared"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle",
            "Documentation": "\n            <summary>\n            Options to customize the ToolTip text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1545931655,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "ChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1535127176,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings.Template",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTooltipSettings"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2010054665,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTooltipSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1642656576,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTooltipSettings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1937082625,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTooltipTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle"
        }
      },
      {
        "HashCode": 1177311328,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the text style of the tooltip.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 184890030,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTooltipTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1394778930,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1493098939,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SelectionStyleComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SelectionStyleComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ComponentId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ComponentId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GivenPattern",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.DataVizCommon.PatternOptions>",
            "Metadata": {
              "Common.PropertyName": "GivenPattern"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SelectionStyleComponent"
        }
      },
      {
        "HashCode": 1338277766,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.SelectionStyleComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.SelectionStyleComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ComponentId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ComponentId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GivenPattern",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.DataVizCommon.PatternOptions>",
            "Metadata": {
              "Common.PropertyName": "GivenPattern"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SelectionStyleComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -646437372,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.LegendBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LegendBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.LegendBase"
        }
      },
      {
        "HashCode": -2074423416,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.LegendBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.LegendBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.LegendBase",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -794065126,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.LegendBase.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LegendBase"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.LegendBase.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -141834537,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.LegendBase.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.LegendBase"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.LegendBase.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1607612528,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AnnotationElements"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements"
        }
      },
      {
        "HashCode": -1884394451,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1732589020,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TemplateDataLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel"
        }
      },
      {
        "HashCode": 949165666,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 327962283,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the animation options of chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation"
        }
      },
      {
        "HashCode": 1449334594,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the animation options of chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -285004936,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1602730383,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2051150412,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the color and width of the border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder"
        }
      },
      {
        "HashCode": -1019634049,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the color and width of the border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 940708602,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -308658073,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2076105974,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the text style of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont"
        }
      },
      {
        "HashCode": 602425729,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the text style of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1830993163,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1465303100,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 670956584,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the location.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation"
        }
      },
      {
        "HashCode": 1679708223,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the location.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -352396134,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 925584380,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1907828237,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin"
        }
      },
      {
        "HashCode": -845079089,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1993934302,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1319403202,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1323917020,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the selected data of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDefaultSelectedData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData"
        }
      },
      {
        "HashCode": 1380018892,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the selected data of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1522737289,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDefaultSelectedData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 506504950,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 529193636,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DateTimeAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer"
        }
      },
      {
        "HashCode": -1428776538,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 337948744,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "DateTimeAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1962617661,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1844593175,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DateTimeBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeBase"
        }
      },
      {
        "HashCode": -212444778,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.DateTimeBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeBase",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1149154725,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "DateTimeBase"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -761806800,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.DateTimeBase"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1491648060,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogarithmicAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer"
        }
      },
      {
        "HashCode": 559383534,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1690922226,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LogarithmicAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -284795574,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 915544732,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NumericAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer"
        }
      },
      {
        "HashCode": -1764056453,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 907251576,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NumericAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1825301836,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1237496736,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PrimaryXAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer"
        }
      },
      {
        "HashCode": 37509032,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1128309381,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PrimaryXAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1620686506,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1566861479,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PrimaryYAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer"
        }
      },
      {
        "HashCode": -555075567,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1075543582,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PrimaryYAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1783963594,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1464671414,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ParetoAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer"
        }
      },
      {
        "HashCode": -1609479812,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1009662858,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ParetoAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2030440608,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1819225788,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer"
        }
      },
      {
        "HashCode": -973859223,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1902167367,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1624764214,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 433270635,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisOutsideContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer"
        }
      },
      {
        "HashCode": 865890388,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1404038006,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisOutsideContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 495512589,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1954519667,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisOutsideRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AxisRenderer",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer",
            "Metadata": {
              "Common.PropertyName": "AxisRenderer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer"
        }
      },
      {
        "HashCode": -896219826,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AxisRenderer",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer",
            "Metadata": {
              "Common.PropertyName": "AxisRenderer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1019506031,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisOutsideRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1932730414,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 302065414,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer"
        }
      },
      {
        "HashCode": 39799313,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -34481219,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1765875289,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -961883770,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartColumnRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer"
        }
      },
      {
        "HashCode": 1202929745,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -869774951,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartColumnRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1201183587,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1325657686,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartColumnRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer"
        }
      },
      {
        "HashCode": 2103404750,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 800741828,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartColumnRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1986562758,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -46278747,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRowRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer"
        }
      },
      {
        "HashCode": 1349864728,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1434832197,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRowRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 872169806,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1545156760,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRowRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer"
        }
      },
      {
        "HashCode": 977288797,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 660647177,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRowRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -374410790,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 305615749,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAnnotationRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer"
        }
      },
      {
        "HashCode": -133212517,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 155479286,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAnnotationRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -964144497,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1111915052,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartAreaRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer"
        }
      },
      {
        "HashCode": -1684559437,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -686391384,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartAreaRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1466417502,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1345481766,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartBorderRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer"
        }
      },
      {
        "HashCode": -2021981692,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1756818816,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartBorderRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1275137537,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1011297696,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer"
        }
      },
      {
        "HashCode": 1901295738,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1987322238,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -803789891,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1331108332,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartLegendRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer"
        }
      },
      {
        "HashCode": 179382412,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -98598422,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartLegendRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2044813105,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -338652523,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRenderer"
        }
      },
      {
        "HashCode": 97540292,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 558551693,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1212315517,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1527961366,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTitleRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer"
        }
      },
      {
        "HashCode": -1176742817,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1404792329,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTitleRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1344710135,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -723033980,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CustomLegendRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer"
        }
      },
      {
        "HashCode": 1005092163,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -763526496,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CustomLegendRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1925528363,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 16591257,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataLabelTemplateContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer"
        }
      },
      {
        "HashCode": -1523846277,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2034473706,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartIndicatorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer"
        }
      },
      {
        "HashCode": -1897232301,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1868734739,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartIndicatorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1528836084,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1539755757,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartScrollbar",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartScrollbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Chart",
            "TypeName": "Syncfusion.Blazor.Charts.SfChart",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartY",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollBar",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.Scrollbar",
            "Documentation": "\n            <summary>\n            Sets and gets the chart scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollBar"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartScrollbar"
        }
      },
      {
        "HashCode": 1690014485,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartScrollbar",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartScrollbar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Chart",
            "TypeName": "Syncfusion.Blazor.Charts.SfChart",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartY",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ScrollBar",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.Scrollbar",
            "Documentation": "\n            <summary>\n            Sets and gets the chart scrollbar.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ScrollBar"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartScrollbar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1387783639,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ScrollbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Chart",
            "TypeName": "Syncfusion.Blazor.Charts.SfChart",
            "Metadata": {
              "Common.PropertyName": "Chart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartY",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent"
        }
      },
      {
        "HashCode": 65308970,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Chart",
            "TypeName": "Syncfusion.Blazor.Charts.SfChart",
            "Metadata": {
              "Common.PropertyName": "Chart"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartY",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1584874126,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ScrollbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -194164644,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the content of the UI element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ScrollbarContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -971828106,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartSeriesRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer"
        }
      },
      {
        "HashCode": -271385126,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -319384975,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartSeriesRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -451620274,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -170182077,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartDataLabelRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeries",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer"
        }
      },
      {
        "HashCode": -2026320027,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeries",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -523508020,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartDataLabelRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1109633775,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 975382628,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BoxAndWhiskerSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer"
        }
      },
      {
        "HashCode": -405526285,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1787011286,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "BoxAndWhiskerSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 844793521,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1689893577,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CandleSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer"
        }
      },
      {
        "HashCode": 1431544320,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1963600993,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CandleSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 937044055,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -867741514,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ColumnSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer"
        }
      },
      {
        "HashCode": 237214470,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1855347716,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ColumnSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -694199661,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1929074124,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartErrorBarRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeries",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer"
        }
      },
      {
        "HashCode": -192145959,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "Syncfusion.Blazor.Charts.ChartSeries",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -591219580,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartErrorBarRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1386190549,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -970174227,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HiloOpenCloseSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer"
        }
      },
      {
        "HashCode": 308431236,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -178672062,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HiloOpenCloseSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1008844974,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1847017506,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HiloSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer"
        }
      },
      {
        "HashCode": 1690724600,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1862540587,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HiloSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 958281519,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1083231646,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HistogramSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer"
        }
      },
      {
        "HashCode": 719416195,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -267855302,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HistogramSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2051143969,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1643891054,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ParetoSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer"
        }
      },
      {
        "HashCode": 254570691,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1005053134,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ParetoSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 785134914,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 44346770,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StackingBarSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer"
        }
      },
      {
        "HashCode": -215111693,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1803977817,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "StackingBarSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1648584811,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1003796432,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StackingBar100SeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer"
        }
      },
      {
        "HashCode": 1665933918,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2077454311,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "StackingBar100SeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1135003620,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 275278279,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StackingColumnSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer"
        }
      },
      {
        "HashCode": -1650298223,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 250976269,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "StackingColumnSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 914928949,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1226042279,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StackingColumn100SeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer"
        }
      },
      {
        "HashCode": -1368507773,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 535262563,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "StackingColumn100SeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 533595434,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1387498921,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "WaterfallSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer"
        }
      },
      {
        "HashCode": -621746164,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1104953983,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "WaterfallSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1276930850,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1025540554,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer"
        }
      },
      {
        "HashCode": 508078796,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1073669290,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1843540064,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -360202802,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineBehindContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer"
        }
      },
      {
        "HashCode": 707722469,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -658802143,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineBehindContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1753199919,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -747966025,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineOverContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer"
        }
      },
      {
        "HashCode": -243966492,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410781371,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineOverContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1198633998,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1251325529,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer"
        }
      },
      {
        "HashCode": -470116296,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1047238915,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1396875951,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1993130410,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineBehindRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer"
        }
      },
      {
        "HashCode": -1197638126,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 499394221,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineBehindRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -855894306,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -381649856,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartStriplineOverRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer"
        }
      },
      {
        "HashCode": 982398314,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 330801812,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartStriplineOverRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2054275067,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1097774822,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.TooltipContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.TooltipContainer"
        }
      },
      {
        "HashCode": -1010462459,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.TooltipContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.TooltipContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.TooltipContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -504992582,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTrendlineContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer"
        }
      },
      {
        "HashCode": -12615365,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1592988364,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTrendlineContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1936399540,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1347337195,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionPath"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.CloseOptions",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PathChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "PathChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Metadata": {
              "Common.PropertyName": "CloseChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath"
        }
      },
      {
        "HashCode": 100595464,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.CloseOptions",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PathChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "PathChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Metadata": {
              "Common.PropertyName": "CloseChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 269391765,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionRect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragRect",
            "TypeName": "Syncfusion.Blazor.DataVizCommon.Rect",
            "Metadata": {
              "Common.PropertyName": "DragRect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.CloseOptions",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragRectChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>",
            "Metadata": {
              "Common.PropertyName": "DragRectChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Metadata": {
              "Common.PropertyName": "CloseChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect"
        }
      },
      {
        "HashCode": -897287238,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragRect",
            "TypeName": "Syncfusion.Blazor.DataVizCommon.Rect",
            "Metadata": {
              "Common.PropertyName": "DragRect"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Syncfusion.Blazor.Charts.Internal.CloseOptions",
            "Metadata": {
              "Common.PropertyName": "Close"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragRectChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>",
            "Metadata": {
              "Common.PropertyName": "DragRectChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Metadata": {
              "Common.PropertyName": "CloseChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -15171873,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionRectCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SelectedRectangles",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.Internal.SelectionOptions>",
            "Metadata": {
              "Common.PropertyName": "SelectedRectangles"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection"
        }
      },
      {
        "HashCode": 1816896463,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SelectedRectangles",
            "TypeName": "System.Collections.Generic.List<Syncfusion.Blazor.Charts.Internal.SelectionOptions>",
            "Metadata": {
              "Common.PropertyName": "SelectedRectangles"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1920288315,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ZoomContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ZoomContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ZoomContent"
        }
      },
      {
        "HashCode": 5266881,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ZoomContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ZoomContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ZoomContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 355044398,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ZoomToolkit",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ZoomToolkit"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ZoomToolkit"
        }
      },
      {
        "HashCode": 14159495,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ZoomToolkit",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ZoomToolkit"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ZoomToolkit",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1958052897,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StyleElement",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StyleElement"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StyleElement"
        }
      },
      {
        "HashCode": -283486057,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.StyleElement",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.StyleElement"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.StyleElement",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2032762026,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTooltipComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "GivenContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Metadata": {
              "Common.PropertyName": "GivenContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent"
        }
      },
      {
        "HashCode": -253239906,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "GivenContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Object>",
            "Metadata": {
              "Common.PropertyName": "GivenContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ID",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ID"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1713329820,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GivenContent",
            "ParentTag": "ChartTooltipComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GivenContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -974855497,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GivenContent",
            "ParentTag": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GivenContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 260986300,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.TrimTooltipBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TrimTooltipBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.TrimTooltipBase"
        }
      },
      {
        "HashCode": 1704473720,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.TrimTooltipBase",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.TrimTooltipBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Content",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Content"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.TrimTooltipBase",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -296896242,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the animation options of chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation"
        }
      },
      {
        "HashCode": 886351262,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the animation options of chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Delay",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the option for animation delay of the series.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Delay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Duration",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the duration of animation in milliseconds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Duration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Option to series gets animated on initial loading.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enable"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -213361678,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the color and width of the border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonBorder"
        }
      },
      {
        "HashCode": 1603556204,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the color and width of the border.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the the width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1009291718,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the text style of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonFont"
        }
      },
      {
        "HashCode": -1311358126,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonFont",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the text style of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonFont"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the color for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font family for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font style for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the font weight for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the opacity for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets and gets the size for the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlignment",
            "TypeName": "Syncfusion.Blazor.Charts.Alignment",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the text alignment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlignment"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextOverflow",
            "TypeName": "Syncfusion.Blazor.Charts.TextOverflow",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Sets and gets the chart text overflow.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextOverflow"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonFont",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -195411584,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the label border of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder"
        }
      },
      {
        "HashCode": 511768177,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the label border of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Syncfusion.Blazor.Charts.BorderType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Border type for labels\n            Rectangle\n            Without Top Border\n            Without Top and BottomBorder\n            Without Border\n            Brace\n            CurlyBrace.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the border in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1546629504,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the location.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLocation"
        }
      },
      {
        "HashCode": -1801062215,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonLocation",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the location.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLocation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the x coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n             Sets and gets the y coordinate of the legend in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonLocation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1235610048,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the major grid lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMajorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines"
        }
      },
      {
        "HashCode": 1621834888,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the major grid lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1126010718,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the major tick lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMajorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick lines in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines"
        }
      },
      {
        "HashCode": -1567267697,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the major tick lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick lines in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1751295429,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMargin"
        }
      },
      {
        "HashCode": -2133094934,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMargin",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMargin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Bottom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the bottom margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Bottom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the left margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Right",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the right margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Right"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Sets and gets the top margin for the chart component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMargin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1761833131,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the minor grid lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMinorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines"
        }
      },
      {
        "HashCode": 1919380074,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the minor grid lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The dash array of grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 556144131,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the minor tick lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonMinorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines"
        }
      },
      {
        "HashCode": 572630600,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the minor tick lines of the axis.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The height of the ticks in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The width of the tick line in pixels.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1571655402,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the selected data of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartCommonSelectedData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData"
        }
      },
      {
        "HashCode": -768311423,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "\n            <summary>\n            Options to customize the selected data of the chart component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Series",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the series index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Series"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Point",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Sets and gets the point index for the seleceted data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Point"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 718338638,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.ResourceManager",
        "AssemblyName": "Syncfusion.Blazor.Core",
        "Documentation": "\n            <summary>\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ResourceManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LocaleKeys",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Documentation": "\n            <summary>\n            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LocaleKeys"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.ResourceManager"
        }
      },
      {
        "HashCode": -1894221613,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.ResourceManager",
        "AssemblyName": "Syncfusion.Blazor.Core",
        "Documentation": "\n            <summary>\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Internal.ResourceManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "LocaleKeys",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Documentation": "\n            <summary>\n            Add the component and its dependent component locale keys from the LocaleService/GetMappingLocale method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LocaleKeys"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.ResourceManager",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -852522823,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.SyncfusionLicense",
        "AssemblyName": "Syncfusion.Blazor.Core",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SyncfusionLicense"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.SyncfusionLicense"
        }
      },
      {
        "HashCode": 134366008,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.SyncfusionLicense",
        "AssemblyName": "Syncfusion.Blazor.Core",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Internal.SyncfusionLicense"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.SyncfusionLicense",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1030379959,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataManager",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            The DataManager is a data management component used for performing data operations in applications.\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HttpClientInstance",
            "TypeName": "System.Net.Http.HttpClient",
            "Documentation": "\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "HttpClientInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdaptorInstance",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdaptorInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Adaptor",
            "TypeName": "Syncfusion.Blazor.Adaptors",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Adaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataAdaptor",
            "TypeName": "Syncfusion.Blazor.Data.IAdaptor",
            "Documentation": "\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "DataAdaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InsertUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InsertUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpdateUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpdateUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrudUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrudUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BatchUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "BatchUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Json",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Json"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Headers",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Headers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeTillExpiration",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeTillExpiration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CachingPageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CachingPageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCaching",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables data caching.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCaching"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Key",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Key"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossDomain",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossDomain"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Jsonp",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Jsonp"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the data type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequiresFormat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequiresFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataManager"
        }
      },
      {
        "HashCode": -949368600,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataManager",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            The DataManager is a data management component used for performing data operations in applications.\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HttpClientInstance",
            "TypeName": "System.Net.Http.HttpClient",
            "Documentation": "\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "HttpClientInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdaptorInstance",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdaptorInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Adaptor",
            "TypeName": "Syncfusion.Blazor.Adaptors",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Adaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataAdaptor",
            "TypeName": "Syncfusion.Blazor.Data.IAdaptor",
            "Documentation": "\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "DataAdaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InsertUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InsertUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpdateUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpdateUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrudUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrudUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BatchUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "BatchUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Json",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Json"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Headers",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Headers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeTillExpiration",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeTillExpiration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CachingPageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CachingPageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCaching",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables data caching.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCaching"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Key",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Key"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossDomain",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossDomain"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Jsonp",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Jsonp"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the data type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequiresFormat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequiresFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataManager",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1471269533,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.DataManager.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "DataManager"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.DataManager.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1484241928,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.DataManager.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.DataManager"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.DataManager.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1259452424,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Data.SfDataManager",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfDataManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HttpClientInstance",
            "TypeName": "System.Net.Http.HttpClient",
            "Documentation": "\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "HttpClientInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdaptorInstance",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdaptorInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Adaptor",
            "TypeName": "Syncfusion.Blazor.Adaptors",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Adaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataAdaptor",
            "TypeName": "Syncfusion.Blazor.Data.IAdaptor",
            "Documentation": "\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "DataAdaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InsertUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InsertUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpdateUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpdateUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrudUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrudUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BatchUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "BatchUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Json",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Json"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Headers",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Headers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeTillExpiration",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeTillExpiration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CachingPageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CachingPageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCaching",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables data caching.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCaching"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Key",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Key"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossDomain",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossDomain"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Jsonp",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Jsonp"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the data type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequiresFormat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequiresFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Data.SfDataManager"
        }
      },
      {
        "HashCode": -1923943306,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Data.SfDataManager",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Data.SfDataManager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HttpClientInstance",
            "TypeName": "System.Net.Http.HttpClient",
            "Documentation": "\n            <summary>\n            Specifies the HttpClient instance to be used  by DataManager.\n            </summary>\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "HttpClientInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdaptorInstance",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\n            </summary>\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\n            Injecting services into custom adaptor class, is not supported while using this approach.\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdaptorInstance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Adaptor",
            "TypeName": "Syncfusion.Blazor.Adaptors",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the data adaptor to be used by DataManager.\n            <list type=\"bullet\">\n            <item>\n            <term>BlazorAdaptor</term>\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\n            </item>\n            <item>\n            <term>ODataAdaptor</term>\n            <description>\n            OData Adaptor provies ability to consume and manipulate data from OData services.\n            </description>\n            </item>\n            <item>\n            <term>ODataV4Adaptor</term>\n            <description>\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\n            </description>\n            </item>\n            <item>\n            <term>WebApiAdaptor</term>\n            <description>\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n            </description>\n            </item>\n            <item>\n            <term>UrlAdaptor</term>\n            <description>\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\n            </description>\n            </item>\n            <item>\n            <term>RemoteSaveAdaptor</term>\n            <description>\n            Remote Save Adaptor is used for binding JSON data.\n            It interacts with remote services only for CRUD operations.\n            </description>\n            </item>\n            <item>\n            <term>CustomAdaptor</term>\n            <description>\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\n            extended from DataAdaptor class.\n            </description>\n            </item>\n            <item>\n            <term>JsonAdaptor</term>\n            <description>\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\n            </description>\n            </item>\n            </list>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Adaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataAdaptor",
            "TypeName": "Syncfusion.Blazor.Data.IAdaptor",
            "Documentation": "\n            <summary>\n            Holds adaptor instance.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "DataAdaptor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InsertUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the insert URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert method is called, request will be made to InsertUrl.\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InsertUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the remove URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Remove method is called, request will be made to RemoveUrl.\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UpdateUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the update URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Update method is called, request will be made to UpdateUrl.\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "UpdateUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrudUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the CRUD URL.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrudUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BatchUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the batch url.\n            </summary>\n            <remarks>Applicable for remote adaptors.\n            When SaveChanges method is called, request will be made to BatchUrl.\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "BatchUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Json",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Json"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Headers",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies the key/value pair of headers.\n            </summary>\n            <remarks>\n            Use Headers to add any custom headers to the request made by DataManager.\n            Users can also send authentication bearer token using Headers property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Headers"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies the accept type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the IEnumerale data.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeTillExpiration",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the time limit to clear the cached data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeTillExpiration"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CachingPageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the caching page size.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CachingPageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnableCaching",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables data caching.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnableCaching"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequestType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the request type for sending data fetching.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "RequestType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Key",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the primary key value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Key"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CrossDomain",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When true, then indicates that the request is a cross-domain request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CrossDomain"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Jsonp",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the jsonp request.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Jsonp"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataType",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the data type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DataType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Offline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Enables offline mode in datamanager.\n            </summary>\n            <remarks>\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\n            Cached data is stored in the JSON property.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Offline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RequiresFormat",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sepcifies requires format.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RequiresFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Data.SfDataManager",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -329131016,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Data.SfDataManager.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SfDataManager"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Data.SfDataManager.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 926201121,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.Data.SfDataManager.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Defines the child content.\n            </summary>\n            <exclude />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.Data.SfDataManager"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.Data.SfDataManager.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 468452146,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.JSInteropAdaptor",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "JSInteropAdaptor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.JSInteropAdaptor"
        }
      },
      {
        "HashCode": 1789454602,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.Internal.JSInteropAdaptor",
        "AssemblyName": "Syncfusion.Blazor.Data",
        "Documentation": "\n            <summary>\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Internal.JSInteropAdaptor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.Internal.JSInteropAdaptor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -368830555,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgAxisGroup",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgAxisGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PathAttributes",
            "TypeName": "System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>",
            "Metadata": {
              "Common.PropertyName": "PathAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAttributes",
            "TypeName": "System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>",
            "Metadata": {
              "Common.PropertyName": "TextAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChartId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ChartId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "LineWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineColor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LineColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalDir",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HorizontalDir"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalDir",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "VerticalDir"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgAxisGroup"
        }
      },
      {
        "HashCode": -1009931160,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgAxisGroup",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgAxisGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PathAttributes",
            "TypeName": "System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>",
            "Metadata": {
              "Common.PropertyName": "PathAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAttributes",
            "TypeName": "System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>",
            "Metadata": {
              "Common.PropertyName": "TextAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChartId",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ChartId"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "LineWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineColor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LineColor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HorizontalDir",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HorizontalDir"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VerticalDir",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "VerticalDir"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgAxisGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -80702454,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgCircle",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "R",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "R"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgCircle"
        }
      },
      {
        "HashCode": -2027228525,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgCircle",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgCircle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "R",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "R"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgCircle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1047700970,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgClass",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgClass"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgClass"
        }
      },
      {
        "HashCode": -1058255096,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgClass",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgClass"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgClass",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 371144535,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgEllipse",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgEllipse"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgEllipse"
        }
      },
      {
        "HashCode": 1277050635,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgEllipse",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgEllipse"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cx",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Cy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgEllipse",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 995516400,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgImage",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreserveAspectRatio",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PreserveAspectRatio"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgImage"
        }
      },
      {
        "HashCode": 2141197701,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgImage",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreserveAspectRatio",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PreserveAspectRatio"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgImage",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 33415136,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgLine",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgLine"
        }
      },
      {
        "HashCode": -874813405,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgLine",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -538696604,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPath",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgPath"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeMiterLimit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeMiterLimit"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClipPath",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClipPath"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPath"
        }
      },
      {
        "HashCode": 815656091,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPath",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgPath"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Direction",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Direction"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeDashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeDashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeMiterLimit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StrokeMiterLimit"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClipPath",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClipPath"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPath",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2135182899,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPattern",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgPattern"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PatternUnits",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PatternUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeOptions",
            "TypeName": "System.Collections.Generic.List<System.Object>",
            "Metadata": {
              "Common.PropertyName": "ShapeOptions"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPattern"
        }
      },
      {
        "HashCode": -761910938,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPattern",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgPattern"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PatternUnits",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PatternUnits"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShapeOptions",
            "TypeName": "System.Collections.Generic.List<System.Object>",
            "Metadata": {
              "Common.PropertyName": "ShapeOptions"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPattern",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 107113688,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPolygon",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgPolygon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "points",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "points"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPolygon"
        }
      },
      {
        "HashCode": 333854089,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgPolygon",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgPolygon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "points",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "points"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgPolygon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -159066065,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgRect",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgRect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgRect"
        }
      },
      {
        "HashCode": 1308719921,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgRect",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgRect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DashArray",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DashArray"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rx",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Rx"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ry",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Ry"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opacity",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Opacity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visibility",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Visibility"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgRect",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -411936022,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgText",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontSize",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAnchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TextAnchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DominantBaseline",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DominantBaseline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgText"
        }
      },
      {
        "HashCode": 586604522,
        "Kind": "Components.Component",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgText",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.DataVizCommon.SvgText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontSize",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontFamily",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontFamily"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FontWeight",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FontWeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAnchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TextAnchor"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DominantBaseline",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DominantBaseline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Transform",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Transform"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AccessibilityText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AccessibilityText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HtmlAttributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "HtmlAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1846348141,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SvgText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 581762573,
        "Kind": "Components.ChildContent",
        "Name": "Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent",
        "AssemblyName": "Syncfusion.Blazor.DataVizCommon",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Syncfusion.Blazor.DataVizCommon.SvgText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 186592043,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1655639245,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1121151949,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1979636908,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1905724443,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -892848959,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1446718439,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1588424014,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 868747197,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 787426028,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1313643291,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1902757884,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1878369800,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 442055878,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1472062986,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 210482135,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1450766640,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1747362364,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 169165660,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -745044341,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1139402182,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 976705603,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 593278123,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1388389237,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -821980582,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1295922993,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 240224611,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1961592489,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1723223064,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -335010394,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1490632599,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 906527888,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -502713351,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -955657122,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1907747834,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -411851640,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1392332545,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 578549584,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -537730330,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2104360724,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1358171059,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 974592162,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1364108548,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1526526883,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 304086471,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 862188923,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 431891662,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1435287063,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2047867003,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1669894437,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 105655141,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -54689486,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1805960553,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1284792013,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -337109147,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1137904826,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -868689525,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1004520427,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1620358731,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -472682042,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1774201348,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2007368528,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1184999635,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 764619040,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 859214160,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1801158310,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -353765892,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1950188589,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -216696633,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1890949290,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1544053299,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2076119368,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -734285010,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1391952131,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -324657617,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -173838871,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -341682906,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1604151266,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1623512693,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1714354502,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 775998936,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2102367221,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1987822902,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1485114574,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2003801423,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -384664444,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 410701632,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1911062033,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1391094284,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1058189993,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 85037801,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1183855237,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": 141407075,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind"
        }
      },
      {
        "HashCode": 1135165520,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1432910606,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -168823864,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -424622683,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1632586745,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1603119386,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1617849760,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1032959981,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 272177428,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1301266069,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1494465513,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1191265366,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -676580572,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1475182035,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 590119871,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1579814920,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1962586894,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": -1399675068,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1097895423,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
        }
      },
      {
        "HashCode": 1762180549,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 503994948,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
        }
      },
      {
        "HashCode": 1867010193,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1900299773,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
        }
      },
      {
        "HashCode": 150911277,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1172267626,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 2043668605,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 736565861,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": 1916311747,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 903712611,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Indeterminate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Indeterminate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Indeterminate"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Indeterminate",
          "Components.Bind.ChangeAttribute": "IndeterminateChanged",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>"
        }
      },
      {
        "HashCode": -1516978479,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>"
        }
      },
      {
        "HashCode": 560285618,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Indeterminate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Indeterminate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Indeterminate' property and a change event delegate to the 'IndeterminateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Indeterminate"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Indeterminate",
          "Components.Bind.ChangeAttribute": "IndeterminateChanged",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -871995910,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfCheckBox<TChecked>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 173394992,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfChip",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfChip",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip"
        }
      },
      {
        "HashCode": 414452367,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfChip",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfChip",
            "Attributes": [
              {
                "Name": "@bind-SelectedChips",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedChips",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String[]>",
            "Documentation": "Binds the provided expression to the 'SelectedChips' property and a change event delegate to the 'SelectedChipsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedChips"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedChips",
          "Components.Bind.ChangeAttribute": "SelectedChipsChanged",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfChip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 613374491,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfRadioButton",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>"
        }
      },
      {
        "HashCode": 989544945,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfRadioButton",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfRadioButton<TChecked>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 349669799,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfSwitch",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>"
        }
      },
      {
        "HashCode": 1437586457,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
        "AssemblyName": "Syncfusion.Blazor.Buttons",
        "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Buttons.SfSwitch",
            "Attributes": [
              {
                "Name": "@bind-Checked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Checked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TChecked>",
            "Documentation": "Binds the provided expression to the 'Checked' property and a change event delegate to the 'CheckedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Checked",
          "Components.Bind.ChangeAttribute": "CheckedChanged",
          "Components.Bind.ExpressionAttribute": "CheckedExpression",
          "Common.TypeName": "Syncfusion.Blazor.Buttons.SfSwitch<TChecked>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 30992783,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SfAccumulationChart",
            "Attributes": [
              {
                "Name": "@bind-DataSource",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-DataSource",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "DataSource"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "DataSource",
          "Components.Bind.ChangeAttribute": "DataSourceChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart"
        }
      },
      {
        "HashCode": -1004793533,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.SfAccumulationChart",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.SfAccumulationChart",
            "Attributes": [
              {
                "Name": "@bind-DataSource",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-DataSource",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "DataSource"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "DataSource",
          "Components.Bind.ChangeAttribute": "DataSourceChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.SfAccumulationChart",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -561359537,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionPath",
            "Attributes": [
              {
                "Name": "@bind-Path",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Path",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Path"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Path",
          "Components.Bind.ChangeAttribute": "PathChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath"
        }
      },
      {
        "HashCode": -2116852789,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionPath",
            "Attributes": [
              {
                "Name": "@bind-Close",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Close"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Close",
          "Components.Bind.ChangeAttribute": "CloseChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath"
        }
      },
      {
        "HashCode": 1025129867,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
            "Attributes": [
              {
                "Name": "@bind-Path",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Path",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Path"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Path",
          "Components.Bind.ChangeAttribute": "PathChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1265608988,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
            "Attributes": [
              {
                "Name": "@bind-Close",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Close"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Close",
          "Components.Bind.ChangeAttribute": "CloseChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionPath",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 429302845,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionRect",
            "Attributes": [
              {
                "Name": "@bind-DragRect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-DragRect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>",
            "Documentation": "Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "DragRect"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "DragRect",
          "Components.Bind.ChangeAttribute": "DragRectChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect"
        }
      },
      {
        "HashCode": 2062495524,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SvgSelectionRect",
            "Attributes": [
              {
                "Name": "@bind-Close",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Close"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Close",
          "Components.Bind.ChangeAttribute": "CloseChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect"
        }
      },
      {
        "HashCode": -2142378468,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
            "Attributes": [
              {
                "Name": "@bind-DragRect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-DragRect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>",
            "Documentation": "Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "DragRect"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "DragRect",
          "Components.Bind.ChangeAttribute": "DragRectChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2140553968,
        "Kind": "Components.Bind",
        "Name": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
        "AssemblyName": "Syncfusion.Blazor.Charts",
        "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
            "Attributes": [
              {
                "Name": "@bind-Close",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>",
            "Documentation": "Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Close"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Close",
          "Components.Bind.ChangeAttribute": "CloseChanged",
          "Common.TypeName": "Syncfusion.Blazor.Charts.Internal.SvgSelectionRect",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -285528496,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": -406693614,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 800
  },
  "RootNamespace": "Blazor_Charts",
  "Documents": [
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Pages\\Counter.razor",
      "TargetPath": "Pages\\Counter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Shared\\NavMenu.razor",
      "TargetPath": "Shared\\NavMenu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Shared\\MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Pages\\FetchData.razor",
      "TargetPath": "Pages\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Shared\\SurveyPrompt.razor",
      "TargetPath": "Shared\\SurveyPrompt.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "e:\\chromeDownload\\C#\\VS2022\\Create-Blazor-Polar-and-Radar-Charts-in-Just-10-Minutes-main\\Pages\\Index.razor",
      "TargetPath": "Pages\\Index.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.2"
}